---- DROP PROCEDURE SP_IFRS_RESET_AMT_PRC;

CREATE OR REPLACE PROCEDURE SP_IFRS_RESET_AMT_PRC(
    IN P_RUNID VARCHAR(20) DEFAULT 'S_00000_0000',
    IN P_DOWNLOAD_DATE DATE DEFAULT NULL,
    IN P_PRC VARCHAR(1) DEFAULT 'S')
LANGUAGE PLPGSQL AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLEUPDATE1 VARCHAR(100);
    V_TABLEUPDATE2 VARCHAR(100);
    V_TABLEUPDATE3 VARCHAR(100);
    V_TABLEUPDATE4 VARCHAR(100);
    V_TABLEUPDATE5 VARCHAR(100);
    V_TABLEUPDATE6 VARCHAR(100);
    V_TABLEUPDATE7 VARCHAR(100);
    V_TABLEUPDATE8 VARCHAR(100);
    V_TABLEUPDATE9 VARCHAR(100);
    V_TABLEUPDATE10 VARCHAR(100);
    V_TABLEUPDATE11 VARCHAR(100);
    V_TABLEUPDATE12 VARCHAR(100);

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := substring(STACK from 'function (.*?) line');
	V_SP_NAME := UPPER(LEFT(fcesig::regprocedure::text, POSITION('(' in fcesig::regprocedure::text)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLEUPDATE1 := 'IFRS_IMA_AMORT_CURR_' || P_RUNID || '';
        V_TABLEUPDATE2 := 'IFRS_MASTER_ACCOUNT_' || P_RUNID || '';
        V_TABLEUPDATE3 := 'IFRS_EVENT_CHANGES_' || P_RUNID || '';
        V_TABLEUPDATE4 := 'IFRS_EVENT_CHANGES_DETAILS_' || P_RUNID || '';
        V_TABLEUPDATE5 := 'IFRS_ACT_ECF_TMP_' || P_RUNID || '';
        V_TABLEUPDATE6 := 'IFRS_ACCT_EIR_ECF_' || P_RUNID || '';
        V_TABLEUPDATE7 := 'IFRS_IMA_AMORT_PREV_' || P_RUNID || '';
        V_TABLEUPDATE8 := 'IFRS_ACCT_COST_FEE_' || P_RUNID || '';
        V_TABLEUPDATE9 := 'IFRS_ACCT_SL_COST_FEE_PREV_' || P_RUNID || '';
        V_TABLEUPDATE10 := 'IFRS_ACCT_EIR_COST_FEE_PREV_' || P_RUNID || '';
        V_TABLEUPDATE11 := 'IFRS_ACCT_COST_FEE_' || P_RUNID || '';
        V_TABLEUPDATE12 := 'IFRS_ACCT_JOURNAL_INTM_' || P_RUNID || '';
    ELSE 
        V_TABLEUPDATE1 := 'IFRS_IMA_AMORT_CURR';
        V_TABLEUPDATE2 := 'IFRS_MASTER_ACCOUNT';
        V_TABLEUPDATE3 := 'IFRS_EVENT_CHANGES';
        V_TABLEUPDATE4 := 'IFRS_EVENT_CHANGES_DETAILS';
        V_TABLEUPDATE5 := 'IFRS_ACT_ECF_TMP';
        V_TABLEUPDATE6 := 'IFRS_ACCT_EIR_ECF';
        V_TABLEUPDATE7 := 'IFRS_IMA_AMORT_PREV';
        V_TABLEUPDATE8 := 'IFRS_ACCT_COST_FEE';
        V_TABLEUPDATE9 := 'IFRS_ACCT_SL_COST_FEE_PREV';
        V_TABLEUPDATE10 := 'IFRS_ACCT_EIR_COST_FEE_PREV';
        V_TABLEUPDATE11 := 'IFRS_ACCT_COST_FEE';
        V_TABLEUPDATE12 := 'IFRS_ACCT_JOURNAL_INTM';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;
    -------- ====== VARIABLE ======

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEUPDATE1 || ', ' || V_TABLEUPDATE2 || ', ' || V_TABLEUPDATE3 || ', ' || V_TABLEUPDATE4 || ', ' || V_TABLEUPDATE5 || ', ' || V_TABLEUPDATE6 || ', ' || V_TABLEUPDATE7 || ', ' || V_TABLEUPDATE8 || ', ' || V_TABLEUPDATE9 || ', ' || V_TABLEUPDATE10 || ', ' || V_TABLEUPDATE11 || ', ' || V_TABLEUPDATE12 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE1 || ' AS SELECT * FROM IFRS_IMA_AMORT_CURR WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE2 || ' AS SELECT * FROM IFRS_MASTER_ACCOUNT WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE3 || ' AS SELECT * FROM IFRS_EVENT_CHANGES WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE4 || ' AS SELECT * FROM IFRS_EVENT_CHANGES_DETAILS WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE5 || ' AS SELECT * FROM IFRS_ACT_ECF_TMP WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE6 || ' AS SELECT * FROM IFRS_ACCT_EIR_ECF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE7 || ' AS SELECT * FROM IFRS_IMA_AMORT_PREV WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE8 || ' AS SELECT * FROM IFRS_ACCT_COST_FEE WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE9 || ' AS SELECT * FROM IFRS_ACCT_SL_COST_FEE_PREV WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE10 || ' AS SELECT * FROM IFRS_ACCT_EIR_COST_FEE_PREV WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE11 || ' AS SELECT * FROM IFRS_ACCT_COST_FEE WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE12 || ' AS SELECT * FROM IFRS_ACCT_JOURNAL_INTM WHERE 1=0; ';
        EXECUTE (V_STR_QUERY);
    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'SP_IFRS_ACCT_EIR_ECF_EVENT', V_SP_NAME, '');

	-- RESET        
	--UPDATE PMA SET EIR_STATUS='' WHERE DOWNLOAD_DATE=V_CURRDATE AND EIR_STATUS='Y';      
	
	V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE1 || ' 
        EIR STATUS = '''' 
		,ECF_STATUS= ''''
        WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);
	V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE2 || ' 
        EIR STATUS = '''' 
		,ECF_STATUS= ''''
        WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE3 || ' 
		WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'DELETE FROM ' || V_TABLEUPDATE4 || ' 
		WHERE DOWNLOAD_DATE >= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);

 	-- GET ACTIVE EIR ECF MASTERID        

    V_STR_QUERY := 'INSERT INTO ' || V_TABLEUPDATE5 || ' 
		MASTERID
		SELECT DISTINC 
			MASTER ID
		FROM ' || V_TABLEUPDATE6 || '
        WHERE AMORTSTOPDATE IS NULL
		AND DOWNLOAD_DATE <= ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);

	 --AND DOWNLOAD_DATE < @V_CURRDATE        
 	--INTEREST RATE CHANGES 
	V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEUPDATE3 || ' 
        ( 
            DOWNLOAD_DATE      
			,MASTERID      
			,ACCOUNT_NUMBER      
			,EFFECTIVE_DATE      
			,BEFORE_VALUE      
			,AFTER_VALUE      
			,EVENT_ID      
			,REMARKS      
			,CREATEDBY   
        ) SELECT ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''
            ,A.MASTERID      
			,A.ACCOUNT_NUMBER      
			,CASE       
			WHEN @V_EFFDATEFLAG = '1'      
				THEN @V_CURRDATE      
			WHEN @V_EFFDATEFLAG = '2'      
				THEN A.NEXT_PAYMENT_DATE      
			ELSE @V_CURRDATE      
			END      
			,C.INTEREST_RATE      
			,A.INTEREST_RATE      
			,0      
			,'INTEREST RATE CHANGES'      
			,'SP_IFRS_ACCT_EIR_ECF_EVENT'
        INNER JOIN '|| V_TABLEUPDATE5|| 'B ON A.MASTERID = B.MASTERID      
 		INNER JOIN IFRS_IMA_AMORT_PREV C ON A.MASTERID = C.MASTERID    
        AND IS_DELETE = 0 
		WHERE (      
			A.INTEREST_RATE <> C.INTEREST_RATE      
			OR A.INTEREST_RATE_IDC <> C.INTEREST_RATE_IDC      
		)      
		AND (      
			ABS(A.UNAMORT_COST_AMT) <> 0      
			OR ABS(A.UNAMORT_FEE_AMT) <> 0      
		)      
		AND ISNULL(A.INTEREST_RATE, 0) > 0      
		AND A.LOAN_DUE_DATE > ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''      
		AND A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''      
		AND A.STAFF_LOAN_FLAG = 'N' ';
    EXECUTE (V_STR_QUERY);

 	--INTEREST RATE CHANGES  FOR BELOW MARKET 20180820      
	V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEUPDATE3 || ' 
        ( 
            DOWNLOAD_DATE      
			,MASTERID      
			,ACCOUNT_NUMBER      
			,EFFECTIVE_DATE      
			,BEFORE_VALUE      
			,AFTER_VALUE      
			,EVENT_ID      
			,REMARKS      
			,CREATEDBY    
        ) SELECT ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''
            ,A.MASTERID      
			,A.ACCOUNT_NUMBER      
			,CASE       
			WHEN @V_EFFDATEFLAG = '1'      
				THEN @V_CURRDATE      
			WHEN @V_EFFDATEFLAG = '2'      
				THEN A.NEXT_PAYMENT_DATE      
			ELSE @V_CURRDATE      
			END      
			,C.INTEREST_RATE      
			,A.INTEREST_RATE      
			,0      
			,'INTEREST RATE CHANGES'      
			,'SP_IFRS_ACCT_EIR_ECF_EVENT'   
        FROM '|| V_TABLEUPDATE1 || ' A      
		INNER JOIN (SELECT DISTINCT MASTERID FROM '|| V_TABLEUPDATE6 || 'WHERE AMORTSTOPDATE IS NULL )B ON A.MASTERID = B.MASTERID      
		INNER JOIN '|| V_TABLEUPDATE7 || ' C ON A.MASTERID = C.MASTERID      
		WHERE (      
			A.INTEREST_RATE <> C.INTEREST_RATE      
			OR A.INTEREST_RATE_IDC <> C.INTEREST_RATE_IDC      
			)      
			--AND (      
			-- ABS(ISNULL(A.UNAMORT_COST_AMT,0)) = 0      
			-- AND ABS(ISNULL(A.UNAMORT_FEE_AMT,0)) = 0      
			--)      
		AND ISNULL(A.INTEREST_RATE, 0) > 0      
		AND A.LOAN_DUE_DATE > ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''     
		AND A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''     
		AND A.STAFF_LOAN_FLAG = 'Y'      ';
    EXECUTE (V_STR_QUERY);
	
 	--LOAN DUE DATE CHANGES      
	V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEUPDATE3 || ' 
        ( 
            DOWNLOAD_DATE      
			,MASTERID      
			,ACCOUNT_NUMBER      
			,EFFECTIVE_DATE      
			,BEFORE_VALUE      
			,AFTER_VALUE      
			,EVENT_ID      
			,REMARKS      
			,CREATEDBY    
        ) SELECT ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''
            ,A.MASTERID      
			,A.ACCOUNT_NUMBER      
			,CASE       
			WHEN @V_EFFDATEFLAG = '1'      
				THEN @V_CURRDATE      
			WHEN @V_EFFDATEFLAG = '2'      
				THEN A.NEXT_PAYMENT_DATE      
			ELSE @V_CURRDATE      
			END      
			,C.LOAN_DUE_DATE      
			,A.LOAN_DUE_DATE      
			,6 -- SEBELUMNYA 1 TEST SAID SUPAYA EIR GA DI HITUNG ULANG       
			,'LOAN DUE DATE CHANGES'      
			,'SP_IFRS_ACCT_EIR_ECF_EVENT'    
        FROM '|| V_TABLEUPDATE1 || ' A      
		INNER JOIN '|| V_TABLEUPDATE6 ||' B ON A.MASTERID = B.MASTERID      
		INNER JOIN '|| V_TABLEUPDATE7 || ' C ON A.MASTERID = C.MASTERID      
		WHERE A.LOAN_DUE_DATE <> C.LOAN_DUE_DATE      
			AND (      
			ABS(A.UNAMORT_COST_AMT) <> 0      
			OR ABS(A.UNAMORT_FEE_AMT) <> 0      
			)      
		AND A.LOAN_DUE_DATE >''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''      
		AND A.DOWNLOAD_DATE =''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''';
    EXECUTE (V_STR_QUERY);

 	--NEW COST/FEE     
	V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEUPDATE3 || ' 
        ( 
            DOWNLOAD_DATE      
			,MASTERID      
			,ACCOUNT_NUMBER      
			,EFFECTIVE_DATE      
			,BEFORE_VALUE      
			,AFTER_VALUE      
			,EVENT_ID      
			,REMARKS      
			,CREATEDBY    
        ) SELECT DISTINCT ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''
            ,A.MASTERID      
			,A.ACCOUNT_NUMBER      
			,CASE       
			WHEN @V_EFFDATEFLAG = '1'      
				THEN @V_CURRDATE      
			WHEN @V_EFFDATEFLAG = '2'      
				THEN A.NEXT_PAYMENT_DATE      
			ELSE @V_CURRDATE      
			END      
			,0      
			,B.AMOUNT      
			,2      
			,B.FLAG_CF + ' - ' + B.FLAG_REVERSE + ' - ' + B.TRX_CODE      
			,'SP_IFRS_ACCT_EIR_ECF_EVENT'   
        FROM ' || V_TABLEUPDATE1 || ' A      
		INNER JOIN ' || V_TABLEUPDATE8 || ' B ON A.MASTERID = B.MASTERID 
		AND A.DOWNLOAD_DATE =''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''     
		WHERE B.STATUS = 'ACT'      
			AND B.METHOD = 'EIR'     
		AND A.LOAN_DUE_DATE >''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''      
		AND A.DOWNLOAD_DATE =''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''';
    EXECUTE (V_STR_QUERY);

	-- NEW STAFFLOAN EVENT      
		V_STR_QUERY := '';
			V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEUPDATE3 || ' 
		( 
			DOWNLOAD_DATE
			,MASTERID
			,ACCOUNT_NUMBER
			,EFFECTIVE_DATE
			,BEFORE_VALUE
			,AFTER_VALUE
			,EVENT_ID
			,REMARKS
			,CREATEDBY
		) SELECT DISTINCT ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''
			,A.MASTERID
			,A.ACCOUNT_NUMBER
			, ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''
			,0
			,0
			,3
			,'''NEW STAFFLOAN ACCOUNT''    
			,'''SP_IFRS_ACCT_EIR_ECF_EVENT''        
		FROM  ' || V_TABLEUPDATE1 || ' A
		INNER JOIN '|| V_TABLEUPDATE6 || 'B ON A.MASTERID = B.MASTERID
		AND A.PRODUCT_TYPE = B.PRD_TYPE        
        AND (A.CURRENCY = B.CCY OR B.CCY = 'ALL')
		WHERE A.LOAN_START_DATE =''' || CAST(V_CURRDATE AS VARCHAR(10)) || ''' 
		AND   (B.IS_STAF_LOAN IN ('1','Y') OR A.STAFF_LOAN_FLAG = 'Y')
		AND A.DOWNLOAD_DATE =''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''';
	EXECUTE (V_STR_QUERY);


    ---- END
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'END', V_SP_NAME, '');
    ---------- ====== BODY ======

END;

$$;