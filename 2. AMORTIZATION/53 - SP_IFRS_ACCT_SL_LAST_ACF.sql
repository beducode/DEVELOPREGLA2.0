---- DROP PROCEDURE SP_IFRS_RESET_AMT_PRC;

CREATE OR REPLACE PROCEDURE SP_IFRS_RESET_AMT_PRC(
    IN P_RUNID VARCHAR(20) DEFAULT 'S_00000_0000',
    IN P_DOWNLOAD_DATE DATE DEFAULT NULL,
    IN P_PRC VARCHAR(1) DEFAULT 'S')
LANGUAGE PLPGSQL AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLEUPDATE1 VARCHAR(100);
    V_TABLEUPDATE2 VARCHAR(100);
    V_TABLEUPDATE3 VARCHAR(100);
    V_TABLEUPDATE4 VARCHAR(100);
    V_TABLEUPDATE5 VARCHAR(100);
    V_TABLEUPDATE6 VARCHAR(100);
    V_TABLEUPDATE7 VARCHAR(100);
    V_TABLEUPDATE8 VARCHAR(100);
    V_TABLEUPDATE9 VARCHAR(100);
    V_TABLEUPDATE10 VARCHAR(100);
    V_TABLEUPDATE11 VARCHAR(100);
    V_TABLEUPDATE12 VARCHAR(100);

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := substring(STACK from 'function (.*?) line');
	V_SP_NAME := UPPER(LEFT(fcesig::regprocedure::text, POSITION('(' in fcesig::regprocedure::text)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLEUPDATE1 := 'TMP_T1_' || P_RUNID || '';
        V_TABLEUPDATE2 := 'IFRS_ACCT_CLOSED_' || P_RUNID || '';
        V_TABLEUPDATE3 := 'IFRS_ACCT_SL_ACF_' || P_RUNID || '';
        V_TABLEUPDATE4 := 'IFRS_ACCT_SL_ECF_' || P_RUNID || '';
        V_TABLEUPDATE5 := 'IFRS_ACCT_SL_ACCRU_PREV_' || P_RUNID || '';

    ELSE 
        V_TABLEUPDATE1 := 'TMP_T1';
        V_TABLEUPDATE2 := 'IFRS_ACCT_CLOSED';
        V_TABLEUPDATE3 := 'IFRS_ACCT_SL_ACF';
        V_TABLEUPDATE4 := 'IFRS_ACCT_SL_ECF';
        V_TABLEUPDATE5 := 'IFRS_ACCT_SL_ACCRU_PREV';
      
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;
    -------- ====== VARIABLE ======

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEUPDATE1 || ', ' || V_TABLEUPDATE2 || ', ' || V_TABLEUPDATE3 || ', ' || V_TABLEUPDATE4 || ', ' || V_TABLEUPDATE5 || ', ' || V_TABLEUPDATE6 || ', ' || V_TABLEUPDATE7 || ', ' || V_TABLEUPDATE8 || ', ' || V_TABLEUPDATE9 || ', ' || V_TABLEUPDATE10 || ', ' || V_TABLEUPDATE11 || ', ' || V_TABLEUPDATE12 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE1 || ' AS SELECT * FROM TMP_T1 WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE2 || ' AS SELECT * FROM IFRS_ACCT_CLOSED WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE3 || ' AS SELECT * FROM IFRS_ACCT_SL_ACF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE4 || ' AS SELECT * FROM IFRS_ACCT_SL_ECF WHERE 1=0; ';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEUPDATE5 || ' AS SELECT * FROM IFRS_ACCT_SL_ACCRU_PREV WHERE 1=0; ';
        EXECUTE (V_STR_QUERY);
    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    ---- DELETE ECF
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'START', 'SP_IFRS_ACCT_SL_LAST_ACF', '');

    V_STR_QUERY := 'TRUNCATE TABLE ' || V_TABLEUPDATE1 ||
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'INSERT INTO ' || V_TABLEUPDATE1 || ' (MASTERID)
        SELECT DISTINCT A.MASTERID
        FROM ' || V_TABLEUPDATE2 || ' A
        JOIN ' || V_TABLEUPDATE3 || ' B ON B.DOWNLOAD_DATE = ''' || CAST(V_PREVDATE AS VARCHAR(10)) || '''::DATE
        AND B.MASTERID = A.MASTERID
        JOIN ' || V_TABLEUPDATE4 || ' C ON C.AMORTSTOPDATE IS NULL 
        AND C.MASTERID = A.MASTERID
        AND C.PREVDATE = C.PMTDATE
        WHERE A.DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'TRUNCATE TABLE ' || V_TABLEUPDATE1 ||
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'INSERT INTO ' || V_TABLEUPDATE1 || ' (ID)
        SELECT MAX(ID) ID
        FROM ' || V_TABLEUPDATE3 || '
        WHERE DOWNLOAD_DATE = ''' || CAST(V_PREVDATE AS VARCHAR(10)) || '''::DATE
        AND MASTERID IN (SELECT MASTERID FROM ' || V_TABLEUPDATE1 || ')
        GROUP BY MASTERID';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE5 || '
        SET STATUS = ''' || CAST(V_CURRDATE AS VARCHAR(8)) || '''::DATE
        ,CREATEDBY = ''SL_LAST_ACF''
        WHERE STATUS = ''ACT''
        AND MASTERID IN (SELECT MASTERID FROM ' || V_TABLEUPDATE1 || ')';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'INSERT INTO ' || V_TABLEUPDATE3 || ' (
        DOWNLOAD_DATE  
        ,FACNO  
        ,CIFNO  
        ,ACCTNO  
        ,DATASOURCE  
        ,ECFDATE  
        ,MASTERID  
        ,BRANCH  
        ,N_UNAMORT_FEE  
        ,N_AMORT_FEE  
        ,N_ACCRU_FEE  
        ,N_ACCRUFULL_FEE  
        ,N_UNAMORT_COST  
        ,N_AMORT_COST  
        ,N_ACCRU_COST  
        ,N_ACCRUFULL_COST  
        ,N_ACCRU_PREV_FEE  
        ,N_ACCRU_PREV_COST  
        ,DO_AMORT  
        ,CREATEDDATE  
        ,CREATEDBY  
        ,ACF_CODE
        )
        SELECT ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE' || '
        ,FACNO
        ,CIFNO
        ,ACCTNO
        ,DATASOURCE
        ,ECFDATE
        ,MASTERID
        ,BRANCH
        ,0
        ,N_AMORT_FEE + N_UNAMORT_FEE
        ,CASE
        WHEN DO_AMORT = ''Y''
        THEN N_AMORT_FEE - N_UNAMORT_FEE 
        ELSE - N_UNAMORT_FEE + N_ACCRU_FEE  
        END
        , CASE
        WHEN DO_AMORT = ''Y''
        THEN N_AMORT_FEE - N_UNAMORT_FEE 
        ELSE - N_UNAMORT_FEE + N_ACCRU_FEE  
        END
        ,0 AS N_UNAMORT_COST2
        ,N_AMORT_COST + N_UNAMORT_COST
        ,CASE
        WHEN DO_AMORT = ''Y''
        THEN N_AMORT_COST - N_UNAMORT_COST 
        ELSE - N_UNAMORT_COST + N_ACCRU_COST  
        END
        ,CASE
        WHEN DO_AMORT = ''Y''
        THEN N_AMORT_COST - N_UNAMORT_COST 
        ELSE - N_UNAMORT_COST + N_ACCRU_COST  
        END
        ,0
        ,0
        ,''Y'' AS DO_AMORT2
        ,CURRENT_TIMESTAMP AS CREATEDDATE2
        ,''SP_SL_LAST_ACF'' AS CREATEDBY2
        ,''9''
        FROM ' || V_TABLEUPDATE3 || '
        WHERE DOWNLOAD_DATE = ''' || CAST(V_PREVDATE AS VARCHAR(10)) || '''::DATE
        AND ID IN (
        SELECT ID
        FROM ' || V_TABLEUPDATE1 || ')';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE4 || ' 
        SET AMORTSTOPDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
        ,AMORTSTOPREASON = ''CLOSED''
        WHERE MASTERID IN (SELECT MASTERID FROM ' || V_TABLEUPDATE1 || ')
        AND AMORTSTOPDATE IS NULL ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'TRUNCATE TABLE ' || TMP_T2 ||
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'INSERT INTO ' || TMP_T2 || ' (MASTERID)
        SELECT MASTERID
        FROM ' || V_TABLEUPDATE3 || '
        WHEN (
        N_UNAMORT_FEE > 0
        OR N_UNAMORT_COST < 0
        )
        AND FLAG_AL IN (''A'', ''O'')
        THEN 1
        ELSE 0
        END = 1
        AND ACF_CODE = ''2''
        AND DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
        ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE3 || '
        SET N_UNAMORT_FEE = 0
        ,N_AMORT_FEE = N_AMORT_FEE + N_UNAMORT_FEE
        ,N_ACCRU_FEE = CASE
        WHEN DO_AMORT = ''Y''
        THEN N_AMORT_FEE - N_UNAMORT_FEE  
        ELSE - N_UNAMORT_FEE + N_ACCRU_FEE  
        END
        ,N_UNAMORT_COST = 0
        ,N_AMORT_COST = N_AMORT_COST + N_UNAMORT_COST
        ,N_ACCRU_COST = CASE
        WHEN DO_AMORT = ''Y''
        THEN N_AMORT_COST - N_UNAMORT_COST  
        ELSE - N_UNAMORT_COST + N_ACCRU_COST  
        END
        ,N_ACCRUFULL_COST = CASE
        WHEN DO_AMORT = ''Y''
        THEN N_AMORT_COST - N_UNAMORT_COST  
        ELSE - N_UNAMORT_COST + N_ACCRU_COST  
        END
        ,N_ACCRU_PREV_FEE = 0
        ,N_ACCRU_PREV_COST = 0
        ,DO_AMORT = ''Y''
        ,CREATEDDATE = CURRENT_TIMESTAMP
        ,CREATEDBY = ''SP_SL_LAST_ACF''
        WHERE CASE 
        WHEN (N_UNAMORT_FEE > 0 OR N_UNAMORT_COST < 0)
        AND FLAG_AL IN (''A'', ''O'')
        THEN 1
        WHEN (N_UNAMORT_FEE < 0 OR N_UNAMORT_COST > 0)
        AND FLAG_AL NOT IN (''A'', ''O'')
        THEN 1
        ELSE 0
        END = 1
        AND ACF_CODE = ''2''
        AND DOWNLOAD_DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE4 || '
        SET AMORTSTOPDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
        ,AMORTSTOPREASON = ''ABN''
        WHERE MASTERID IN (SELECT MASTERID FROM ' || TMP_T2 || ')
        AND AMORTSTOPDATE IS NULL ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE5 || '
        SET STATUS = ' || '''' || CAST(V_CURRDATE AS VARCHAR(8)) || '''::DATE
        ,CREATEDBY = ''SL_LAST_ACF''
        WHERE STATUS = ''ACT''
        AND MASTERID IN (SELECT MASTERID FROM ' || TMP_T2 || ')';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := 'UPDATE ' || V_TABLEUPDATE4 || '
        SET AMORTSTOPDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
        ,AMORTSTOPREASON = ''END''
        WHERE AMORTENDDATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE
        AND AMORTSTOPDATE IS NULL';
    EXECUTE (V_STR_QUERY);
       
    ---- END
    CALL SP_IFRS_LOG_AMORT(V_CURRDATE, 'END', 'SP_IFRS_ACCT_SL_LAST_ACF', '');
    ---------- ====== BODY ======

END;

$$;