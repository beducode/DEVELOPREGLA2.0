USE [IFRS9]
GO
/****** Object:  StoredProcedure [dbo].[SP_IFRS_ACCT_JRNL_INTM_SUMM]    Script Date: 14/06/2024 06:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_IFRS_ACCT_JRNL_INTM_SUMM]  
AS  
DECLARE @V_CURRDATE DATE  
 ,@V_PREVDATE DATE  
  
SELECT @V_CURRDATE = MAX(CURRDATE)  
FROM IFRS_PRC_DATE_AMORT  
  
SELECT @V_PREVDATE = MAX(PREVDATE)  
FROM IFRS_PRC_DATE_AMORT  
  
INSERT INTO IFRS_AMORT_LOG (  
 DOWNLOAD_DATE  
 ,DTM  
 ,OPS  
 ,PROCNAME  
 ,REMARK  
 )  
VALUES (  
 @V_CURRDATE  
 ,CURRENT_TIMESTAMP  
 ,'START'  
 ,'SP_IFRS_ACCT_JOURNAL_INTM_SUMM'  
 ,''  
 )  
  
--DELETE FIRST  
DELETE  
FROM IFRS_ACCT_JOURNAL_INTM_SUMM  
WHERE DOWNLOAD_DATE >= @V_CURRDATE  
  
--TEMP  
TRUNCATE TABLE TMP_JRNL1  
  
INSERT INTO TMP_JRNL1 (  
 FACNO  
 ,CIFNO  
 ,DATASOURCE  
 ,PRDCODE  
 ,TRXCODE  
 ,CCY  
 ,JOURNALCODE  
 ,STATUS  
 ,REVERSE  
 ,N_AMOUNT  
 ,MASTERID  
 ,ACCTNO  
 ,FLAG_CF  
 ,BRANCH  
 ,IS_PNL  
 ,JOURNALCODE2  
 ,PRDTYPE  
 )  
SELECT FACNO  
 ,CIFNO  
 ,DATASOURCE  
 ,PRDCODE  
 ,TRXCODE  
 ,CCY  
 ,JOURNALCODE  
 ,STATUS  
 ,REVERSE  
 ,N_AMOUNT  
 ,MASTERID  
 ,ACCTNO  
 ,FLAG_CF  
 ,BRANCH  
 ,IS_PNL  
 ,JOURNALCODE2  
 ,PRDTYPE  
FROM IFRS_ACCT_JOURNAL_INTM_SUMM  
WHERE DOWNLOAD_DATE = @V_PREVDATE  
  
UNION ALL  
  
SELECT FACNO  
 ,CIFNO  
 ,DATASOURCE  
 ,PRDCODE  
 ,TRXCODE  
 ,CCY  
 ,JOURNALCODE  
 ,STATUS  
 ,REVERSE  
 ,N_AMOUNT  
 ,MASTERID  
 ,ACCTNO  
 ,FLAG_CF  
 ,BRANCH  
 ,IS_PNL  
 ,JOURNALCODE2  
 ,PRDTYPE  
FROM IFRS_ACCT_JOURNAL_INTM  
WHERE DOWNLOAD_DATE = @V_CURRDATE  
  
INSERT INTO IFRS_AMORT_LOG (  
 DOWNLOAD_DATE  
 ,DTM  
 ,OPS  
 ,PROCNAME  
 ,REMARK  
 )  
VALUES (  
 @V_CURRDATE  
 ,CURRENT_TIMESTAMP  
 ,'DEBUG'  
 ,'TMP INSERT'  
 ,''  
 )  
  
--INSERT  
INSERT INTO IFRS_ACCT_JOURNAL_INTM_SUMM (  
 DOWNLOAD_DATE  
 ,FACNO  
 ,CIFNO  
 ,DATASOURCE  
 ,PRDCODE  
 ,TRXCODE  
 ,CCY  
 ,JOURNALCODE  
 ,STATUS  
 ,REVERSE  
 ,N_AMOUNT  
 ,MASTERID  
 ,CREATEDDATE  
 ,ACCTNO  
 ,FLAG_CF  
 ,BRANCH  
 ,IS_PNL  
 ,JOURNALCODE2  
 ,PRDTYPE  
 )  
SELECT DOWNLOAD_DATE  
 ,FACNO  
 ,CIFNO  
 ,DATASOURCE  
 ,PRDCODE  
 ,TRXCODE  
 ,CCY  
 ,JOURNALCODE  
 ,STATUS  
 ,REVERSE  
 ,AMOUNT  
 ,MASTERID  
 ,CREATEDDATE  
 ,ACCTNO  
 ,FLAG_CF  
 ,BRANCH  
 ,IS_PNL  
 ,JOURNALCODE2  
 ,PRDTYPE  
FROM (  
 SELECT @V_CURRDATE AS DOWNLOAD_DATE  
  ,FACNO  
  ,CIFNO  
  ,DATASOURCE  
  ,PRDCODE  
  ,TRXCODE  
  ,CCY  
  ,JOURNALCODE  
  ,STATUS  
  ,REVERSE  
  ,SUM(COALESCE(N_AMOUNT, 0)) AS AMOUNT  
  ,MASTERID  
  ,CURRENT_TIMESTAMP AS CREATEDDATE  
  ,ACCTNO  
  ,FLAG_CF  
  ,BRANCH  
  ,IS_PNL  
  ,JOURNALCODE2  
  ,PRDTYPE  
 FROM TMP_JRNL1  
 GROUP BY FACNO  
  ,CIFNO  
  ,DATASOURCE  
  ,PRDCODE  
  ,TRXCODE  
  ,CCY  
  ,JOURNALCODE  
  ,STATUS  
  ,REVERSE  
  ,MASTERID  
  ,ACCTNO  
  ,FLAG_CF  
  ,BRANCH  
  ,IS_PNL  
  ,JOURNALCODE2  
  ,PRDTYPE  
 ) B  
  
INSERT INTO IFRS_AMORT_LOG (  
 DOWNLOAD_DATE  
 ,DTM  
 ,OPS  
 ,PROCNAME  
 ,REMARK  
 )  
VALUES (  
 @V_CURRDATE  
 ,CURRENT_TIMESTAMP  
 ,'DEBUG'  
 ,'SUMM INSERT'  
 ,''  
 )  
  
-- UPDATE AMORT AMOUNT ON COST FEE SUMM  
TRUNCATE TABLE TMP_AP  
  
INSERT INTO TMP_AP (  
 MASTERID  
 ,FLAG_CF  
 ,AMOUNT  
 )  
SELECT MASTERID  
 ,FLAG_CF  
 ,SUM(CASE   
   WHEN REVERSE = 'Y'  
    THEN - 1 * N_AMOUNT  
   ELSE N_AMOUNT  
   END) AS AMORT_AMOUNT  
FROM IFRS_ACCT_JOURNAL_INTM_SUMM  
WHERE DOWNLOAD_DATE = @V_CURRDATE  
 AND JOURNALCODE IN (  
  'ACCRU'  
  ,'ACCRU_SL'  
  ,'AMORT'  
  )  
 AND TRXCODE <> 'BENEFIT'  
GROUP BY MASTERID  
 ,FLAG_CF  
  
UPDATE IFRS_ACCT_COST_FEE_SUMM  
SET AMORT_FEE = B.AMOUNT  
FROM TMP_AP B  
WHERE IFRS_ACCT_COST_FEE_SUMM.MASTERID = B.MASTERID  
 AND IFRS_ACCT_COST_FEE_SUMM.DOWNLOAD_DATE = @V_CURRDATE  
 AND B.FLAG_CF = 'F'  
  
--- RIDWAN FOR AMORT COST  
UPDATE IFRS_ACCT_COST_FEE_SUMM  
SET AMORT_COST = B.AMOUNT  
FROM TMP_AP B  
WHERE IFRS_ACCT_COST_FEE_SUMM.MASTERID = B.MASTERID  
 AND IFRS_ACCT_COST_FEE_SUMM.DOWNLOAD_DATE = @V_CURRDATE  
 AND B.FLAG_CF = 'C'  
  
TRUNCATE TABLE TMP_AP  
  
INSERT INTO TMP_AP (  
 MASTERID  
 ,FLAG_CF  
 ,AMOUNT  
 )  
SELECT MASTERID  
 ,FLAG_CF  
 ,SUM(CASE   
   WHEN REVERSE = 'Y'  
    THEN - 1 * N_AMOUNT  
   ELSE N_AMOUNT  
   END) AS AMORT_AMOUNT  
FROM IFRS_ACCT_JOURNAL_INTM_SUMM  
WHERE DOWNLOAD_DATE = @V_CURRDATE  
 AND JOURNALCODE IN (  
  'ACCRU'  
  ,'AMORT'  
  )  
 AND TRXCODE = 'BENEFIT'  
GROUP BY MASTERID  
 ,FLAG_CF  
  
UPDATE IFRS_LBM_STAFF_BENEFIT_SUMM  
SET AMORT_FEE = B.AMOUNT  
FROM TMP_AP B  
WHERE IFRS_LBM_STAFF_BENEFIT_SUMM.MASTERID = B.MASTERID  
 AND IFRS_LBM_STAFF_BENEFIT_SUMM.DOWNLOAD_DATE = @V_CURRDATE  
 AND B.FLAG_CF = 'F'  
  
UPDATE IFRS_LBM_STAFF_BENEFIT_SUMM  
SET --AMORT_FEE=B.AMOUNT  
 AMORT_COST = B.AMOUNT  
FROM TMP_AP B  
WHERE IFRS_LBM_STAFF_BENEFIT_SUMM.MASTERID = B.MASTERID  
 AND IFRS_LBM_STAFF_BENEFIT_SUMM.DOWNLOAD_DATE = @V_CURRDATE  
 AND B.FLAG_CF = 'C'  
  
INSERT INTO IFRS_AMORT_LOG (  
 DOWNLOAD_DATE  
 ,DTM  
 ,OPS  
 ,PROCNAME  
 ,REMARK  
 )  
VALUES (  
 @V_CURRDATE  
 ,CURRENT_TIMESTAMP  
 ,'DEBUG'  
 ,'UPDATE AMORT AMT'  
 ,''  
 )  
  
-- UPDATE INITIAL COST FEE  
UPDATE IFRS_IMA_AMORT_CURR  
SET INITIAL_UNAMORT_TXN_COST = B.AMOUNT_COST  
 ,INITIAL_UNAMORT_ORG_FEE = B.AMOUNT_FEE  
FROM IFRS_ACCT_COST_FEE_SUMM B  
WHERE IFRS_IMA_AMORT_CURR.MASTERID = B.MASTERID  
 AND B.DOWNLOAD_DATE = @V_CURRDATE  
 AND ISNULL(IFRS_IMA_AMORT_CURR.FACILITY_NUMBER, '') = ISNULL(B.FACNO, '')  
  
UPDATE IFRS_MASTER_ACCOUNT  
SET INITIAL_UNAMORT_TXN_COST = B.AMOUNT_COST  
 ,INITIAL_UNAMORT_ORG_FEE = B.AMOUNT_FEE  
FROM IFRS_ACCT_COST_FEE_SUMM B  
WHERE IFRS_MASTER_ACCOUNT.MASTERID = B.MASTERID  
 AND B.DOWNLOAD_DATE = @V_CURRDATE  
 AND IFRS_MASTER_ACCOUNT.DOWNLOAD_DATE = @V_CURRDATE  
 AND ISNULL(IFRS_MASTER_ACCOUNT.FACILITY_NUMBER, '') = ISNULL(B.FACNO, '')  
UPDATE IFRS_IMA_AMORT_CURR  
SET INITIAL_BENEFIT = B.AMOUNT_FEE  
  
--INITIAL_UNAMORT_TXN_COST = B.AMOUNT_COST  
 --,INITIAL_UNAMORT_ORG_FEE = B.AMOUNT_FEE  
FROM IFRS_LBM_STAFF_BENEFIT_SUMM B  
WHERE IFRS_IMA_AMORT_CURR.MASTERID = B.MASTERID  
 AND B.DOWNLOAD_DATE = @V_CURRDATE  
  
UPDATE IFRS_MASTER_ACCOUNT  
SET INITIAL_BENEFIT = B.AMOUNT_FEE  
--INITIAL_UNAMORT_TXN_COST = B.AMOUNT_COST  
 --,INITIAL_UNAMORT_ORG_FEE = B.AMOUNT_FEE  
FROM IFRS_LBM_STAFF_BENEFIT_SUMM B  
WHERE IFRS_MASTER_ACCOUNT.MASTERID = B.MASTERID  
 AND B.DOWNLOAD_DATE = @V_CURRDATE  
 AND IFRS_MASTER_ACCOUNT.DOWNLOAD_DATE = @V_CURRDATE  
  
INSERT INTO IFRS_AMORT_LOG (  
 DOWNLOAD_DATE  
 ,DTM  
 ,OPS  
 ,PROCNAME  
 ,REMARK  
 )  
VALUES (  
 @V_CURRDATE  
 ,CURRENT_TIMESTAMP  
 ,'DEBUG'  
 ,'UPDATE INITIAL AMT'  
 ,''  
 )  
  
INSERT INTO IFRS_AMORT_LOG (  
 DOWNLOAD_DATE  
 ,DTM  
 ,OPS  
 ,PROCNAME  
 ,REMARK  
 )  
VALUES (  
 @V_CURRDATE  
 ,CURRENT_TIMESTAMP  
 ,'END'  
 ,'SP_IFRS_ACCT_JOURNAL_INTM_SUMM'  
 ,''  
 )  
GO
