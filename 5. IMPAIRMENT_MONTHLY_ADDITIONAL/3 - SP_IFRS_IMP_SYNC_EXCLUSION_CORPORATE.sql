---- DROP PROCEDURE SP_IFRS_IMP_SYNC_EXCLUSION_CORPORATE;

CREATE OR REPLACE PROCEDURE SP_IFRS_IMP_SYNC_EXCLUSION_CORPORATE(
    IN P_RUNID VARCHAR(20) DEFAULT 'S_00000_0000',
    IN P_DOWNLOAD_DATE DATE DEFAULT NULL,
    IN P_PRC VARCHAR(1) DEFAULT 'S')
LANGUAGE PLPGSQL AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_PREVMONTH DATE;
    V_CURRDATE DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLENAME VARCHAR(100);
    V_TABLEINSERT1 VARCHAR(100);
    V_TABLEINSERT2 VARCHAR(100);
    
    ---- CONDITION
    V_RETURNROWS INT;
    V_RETURNROWS2 INT;
    V_TABLEDEST VARCHAR(100);
    V_COLUMNDEST VARCHAR(100);
    V_SPNAME VARCHAR(100);
    V_OPERATION VARCHAR(100);

    ---- RESULT
    V_QUERYS TEXT;

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := substring(STACK from 'function (.*?) line');
	V_SP_NAME := UPPER(LEFT(fcesig::regprocedure::text, POSITION('(' in fcesig::regprocedure::text)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLENAME := 'TMP_IMA_' || P_RUNID || '';
        V_TABLEINSERT1 := 'TBLU_EXCLUSION_CORP_' || P_RUNID || '';
        V_TABLEINSERT2 := 'IFRS_ECL_EXCLUSION_' || P_RUNID || '';
    ELSE 
        V_TABLENAME := 'IFRS_MASTER_ACCOUNT';
        V_TABLEINSERT1 := 'TBLU_EXCLUSION_CORP';
        V_TABLEINSERT2 := 'IFRS_ECL_EXCLUSION';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;

    V_PREVMONTH := F_EOMONTH(V_CURRDATE, 1, 'M', 'PREV');
    
    V_RETURNROWS2 := 0;
    -------- ====== VARIABLE ======

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEINSERT1 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEINSERT1 || ' AS SELECT * FROM TBLU_EXCLUSION_CORP WHERE 1=0 ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEINSERT2 || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEINSERT2 || ' AS SELECT * FROM IFRS_ECL_EXCLUSION WHERE 1=0 ';
        EXECUTE (V_STR_QUERY);
    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DELETE FROM ' || V_TABLEINSERT1 || ' WHERE CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEINSERT1 || ' 
        (
            DOWNLOAD_DATE 
            ,MASTERID 
            ,CUSTOMER_NUMBER 
            ,ACCOUNT_NUMBER 
            ,PRODUCT_CODE 
            ,CREATEDBY 
            ,CREATEDDATE 
            ,CREATEDHOST 
            ,EXCLUSION_PERCENTAGE 
        ) SELECT 
            CAST(REPLACE(CAST(A.DOWNLOAD_DATE AS VARCHAR(10)), ''-'', '''') AS VARCHAR(8)) 
            ,A.MASTERID 
            ,A.CUSTOMER_NUMBER 
            ,A.ACCOUNT_NUMBER 
            ,A.PRODUCT_CODE 
            ,''SP_IFRS_IMP_SYNC_EXCLUSION_CORPORATE'' AS CREATEDBY 
            ,A.CREATEDDATE 
            ,A.CREATEDHOST 
            ,''0'' AS EXCLUSION_PERCENTAGE 
        FROM ' || V_TABLENAME || ' A 
        JOIN TBLM_COMMONCODEDETAIL B 
        ON LEFT(A.FACILITY_NUMBER, 6) = B.VALUE1 
        WHERE CAST(A.DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
        AND A.PRODUCT_GROUP = ''BG'' AND B.COMMONCODE = ''CKPN_NOL'' ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEINSERT2 || ' 
        ( 
            DOWNLOAD_DATE 
            ,MASTERID 
            ,CUSTOMER_NUMBER 
            ,ACCOUNT_NUMBER 
            ,PRODUCT_CODE 
            ,CREATEDBY 
            ,CREATEDDATE 
            ,CREATEDHOST 
            ,EXCLUSION_PERCENTAGE 
        ) SELECT 
            CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE 
            ,MASTERID 
            ,CUSTOMER_NUMBER 
            ,ACCOUNT_NUMBER 
            ,PRODUCT_CODE 
            ,CREATEDBY 
            ,CREATEDDATE 
            ,CREATEDHOST 
            ,COALESCE(EXCLUSION_PERCENTAGE, ''100'') AS EXCLUSION_PERCENTAGE 
        FROM ' || V_TABLEINSERT1 || ' 
        WHERE CAST(DOWNLOAD_DATE AS VARCHAR(10))::DATE = ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    GET DIAGNOSTICS V_RETURNROWS = ROW_COUNT;
    V_RETURNROWS2 := V_RETURNROWS2 + V_RETURNROWS;
    V_RETURNROWS := 0;

    RAISE NOTICE 'SP_IFRS_IMP_SYNC_EXCLUSION_CORPORATE | AFFECTED RECORD : %', V_RETURNROWS2;
    ---------- ====== BODY ======

    -------- ====== LOG ======
    V_TABLEDEST = V_TABLEINSERT2;
    V_COLUMNDEST = '-';
    V_SPNAME = 'SP_IFRS_IMP_SYNC_EXCLUSION_CORPORATE';
    V_OPERATION = 'INSERT';
    
    CALL SP_IFRS_EXEC_AND_LOG(V_CURRDATE, V_TABLEDEST, V_COLUMNDEST, V_SPNAME, V_OPERATION, V_RETURNROWS2, P_RUNID);
    -------- ====== LOG ======

    -------- ====== RESULT ======
    V_QUERYS = 'SELECT * FROM ' || V_TABLEINSERT2 || '';
    CALL SP_IFRS_RESULT_PREV(V_CURRDATE, V_QUERYS, V_SPNAME, V_RETURNROWS2, P_RUNID);
    -------- ====== RESULT ======

END;

$$;