---- DROP PROCEDURE SP_IFRS_ECL_MOVEMENT_DATA;

CREATE OR REPLACE PROCEDURE SP_IFRS_ECL_MOVEMENT_DATA(
    IN P_RUNID VARCHAR(20) DEFAULT 'S_00000_0000',
    IN P_DOWNLOAD_DATE DATE DEFAULT NULL,
    IN P_PRC VARCHAR(1) DEFAULT 'S')
LANGUAGE PLPGSQL AS $$
DECLARE
    ---- DATE
    V_PREVDATE DATE;
    V_CURRDATE DATE;
    V_PREVMONTH DATE;
    V_CURRMONTH DATE;

    ---- QUERY   
    V_STR_QUERY TEXT;

    ---- TABLE LIST       
    V_TABLEINSERT VARCHAR(100);
    V_TMPTABLE1 VARCHAR(100);
    V_TMPTABLE2 VARCHAR(100);
    V_TMPTABLE3 VARCHAR(100);
    V_TMPTABLE4 VARCHAR(100);
    
    ---- VARIABLE PROCESS
    V_ROW_CF INT;
    
    ---- CONDITION
    V_RETURNROWS INT;
    V_RETURNROWS2 INT;
    V_TABLEDEST VARCHAR(100);
    V_COLUMNDEST VARCHAR(100);
    V_SPNAME VARCHAR(100);
    V_OPERATION VARCHAR(100);

    ---- RESULT
    V_QUERYS TEXT;

    --- VARIABLE
    V_SP_NAME VARCHAR(100);
    STACK TEXT; 
    FCESIG TEXT;
BEGIN 
    -------- ====== VARIABLE ======
	GET DIAGNOSTICS STACK = PG_CONTEXT;
	FCESIG := substring(STACK from 'function (.*?) line');
	V_SP_NAME := UPPER(LEFT(fcesig::regprocedure::text, POSITION('(' in fcesig::regprocedure::text)-1));

    IF COALESCE(P_PRC, NULL) IS NULL THEN
        P_PRC := 'S';
    END IF;

    IF COALESCE(P_RUNID, NULL) IS NULL THEN
        P_RUNID := 'S_00000_0000';
    END IF;

    IF P_PRC = 'S' THEN 
        V_TABLEINSERT := 'IFRS_ECL_MOVEMENT_DATA_' || P_RUNID || '';
        V_TMPTABLE1 := 'TMP_CURR_' || P_RUNID || '';
        V_TMPTABLE2 := 'TMP_PREV_' || P_RUNID || '';
        V_TMPTABLE3 := 'TMP_CURR_ALL_' || P_RUNID || '';
        V_TMPTABLE4 := 'TMP_PREV_ALL_' || P_RUNID || '';
    ELSE 
        V_TABLEINSERT := 'IFRS_ECL_MOVEMENT_DATA';
        V_TMPTABLE1 := 'TMP_CURR';
        V_TMPTABLE2 := 'TMP_PREV';
        V_TMPTABLE3 := 'TMP_CURR_ALL';
        V_TMPTABLE4 := 'TMP_PREV_ALL';
    END IF;
    
    IF P_DOWNLOAD_DATE IS NULL 
    THEN
        SELECT
            CURRDATE, PREVDATE INTO V_CURRDATE, V_PREVDATE
        FROM
            IFRS_PRC_DATE;
    ELSE        
        V_CURRDATE := P_DOWNLOAD_DATE;
        V_PREVDATE := V_CURRDATE - INTERVAL '1 DAY';
    END IF;

    V_CURRMONTH = F_EOMONTH(V_CURRDATE, 0, 'M', 'NEXT');
    V_PREVMONTH := F_EOMONTH(V_CURRDATE, 1, 'M', 'PREV');

    V_RETURNROWS2 := 0;
    -------- ====== VARIABLE ======

    -------- RECORD RUN_ID --------
    CALL SP_IFRS_RUNNING_LOG(V_CURRDATE, V_SP_NAME, P_RUNID, PG_BACKEND_PID(), CURRENT_DATE);
    -------- RECORD RUN_ID --------

    -------- ====== PRE SIMULATION TABLE ======
    IF P_PRC = 'S' THEN
        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE IF NOT EXISTS IFRS_ECL_MOVEMENT_DATA 
            (
                DOWNLOAD_DATE DATE
                ,URUT INT
                ,DATA_SOURCE VARCHAR(20)
                ,GROUP_SEGMENT VARCHAR(50)
                ,IFRS9_CLASS VARCHAR(50)
                ,POCI INT
                ,OS_POCI DECIMAL(32,6)
                ,STAGE1 DECIMAL(32,6)
                ,STAGE2 DECIMAL(32,6)
                ,STAGE3 DECIMAL(32,6)
                ,OS_STAGE1 DECIMAL(32,6)
                ,OS_STAGE2 DECIMAL(32,6)
                ,OS_STAGE3 DECIMAL(32,6)
                ,GCA_STAGE1 DECIMAL(32,6)
                ,GCA_STAGE2 DECIMAL(32,6)
                ,GCA_STAGE3 DECIMAL(32,6)
                ,UNUSED_STAGE1 DECIMAL(32,6)
                ,UNUSED_STAGE2 DECIMAL(32,6)
                ,UNUSED_STAGE3 DECIMAL(32,6)
                ,STAGE1_I DECIMAL(32,6)
                ,STAGE2_I DECIMAL(32,6)
                ,STAGE3_I DECIMAL(32,6)
                ,OS_STAGE1_I DECIMAL(32,6)
                ,OS_STAGE2_I DECIMAL(32,6)
                ,OS_STAGE3_I DECIMAL(32,6)
                ,GCA_STAGE1_I DECIMAL(32,6)
                ,GCA_STAGE2_I DECIMAL(32,6)
                ,GCA_STAGE3_I DECIMAL(32,6)
                ,UNUSED_STAGE1_I DECIMAL(32,6)
                ,UNUSED_STAGE2_I DECIMAL(32,6)
                ,UNUSED_STAGE3_I DECIMAL(32,6)
                ,CREATEDBY VARCHAR(50)
                ,CREATEDDATE DATE
                ,CREATEDHOST VARCHAR(50)
            ) ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE IF NOT EXISTS VM_IMA_FACILITY_ACCOUNT 
            (
                DOWNLOAD_DATE DATE
                ,DATA_SOURCE VARCHAR(20)
                ,MASTER_ID VARCHAR(100)
                ,PRODUCT_GROUP VARCHAR(50)
                ,ACCOUNT_STATUS VARCHAR(2)
                ,ECL_MODEL_ID BIGINT
                ,STAGE INT
                ,IMPAIRED_FLAG CHAR(1)
                ,IFRS9_CLASS VARCHAR(50)
                ,CURRENCY VARCHAR(10)
                ,EXCHANGE_RATE DECIMAL(32,6)
                ,ECL_AMOUNT DECIMAL(32,6)
                ,IA_UNWINDING_AMOUNT DECIMAL(32,6)
                ,GROSS_CARRYING_AMOUNT DECIMAL(32,6)
                ,UNUSED_AMOUNT DECIMAL(32,6)
                ,LOSS_RATE FLOAT
                ,OUTSTANDING DECIMAL(32,6)
                ,POCI_FLAG INT
            ) ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TABLEINSERT || ' ';
        EXECUTE (V_STR_QUERY);

        V_STR_QUERY := '';
        V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TABLEINSERT || ' AS SELECT * FROM IFRS_ECL_MOVEMENT_DATA WHERE 1=0 ';
        EXECUTE (V_STR_QUERY);
    END IF;
    -------- ====== PRE SIMULATION TABLE ======

    -------- ====== BODY ======
    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DELETE FROM ' || V_TABLEINSERT || ' WHERE DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TMPTABLE1 || ' ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TMPTABLE2 || ' ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TMPTABLE3 || ' ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'DROP TABLE IF EXISTS ' || V_TMPTABLE4 || ' ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TMPTABLE1 || ' 
        (
            DOWNLOAD_DATE DATE 
            ,DATA_SOURCE VARCHAR(20) 
            ,ECL_UNIQUE_ID VARCHAR(100) 
            ,GROUP_SEGMENT VARCHAR(50) 
            ,ACCOUNT_STATUS VARCHAR(2) 
            ,ECL_MODEL_ID BIGINT 
            ,STAGE INT 
            ,IMPAIRED_FLAG CHAR(1) 
            ,IFRS9_CLASS VARCHAR(50) 
            ,EXCHANGE_RATE DECIMAL(32,6) 
            ,ECL_AMOUNT DECIMAL(32,6) 
            ,IA_UNWINDING_AMOUNT DECIMAL(32,6) 
            ,GROSS_CARRYING_AMOUNT DECIMAL(32,6) 
            ,UNUSED_AMOUNT DECIMAL(32,6) 
            ,ECL_AI_AMOUNT DECIMAL(32,6) 
            ,RESTRUCTURE_FLAG INT 
            ,POCI_FLAG INT 
            ,LOSSRATE FLOAT 
            ,OUTSTANDING DECIMAL(32,6) 
        ) ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TMPTABLE2 || ' 
        (
            DOWNLOAD_DATE DATE 
            ,DATA_SOURCE VARCHAR(20) 
            ,ECL_UNIQUE_ID VARCHAR(100) 
            ,GROUP_SEGMENT VARCHAR(50) 
            ,ACCOUNT_STATUS VARCHAR(2) 
            ,ECL_MODEL_ID BIGINT 
            ,STAGE INT 
            ,IMPAIRED_FLAG CHAR(1) 
            ,IFRS9_CLASS VARCHAR(50) 
            ,EXCHANGE_RATE DECIMAL(32,6) 
            ,ECL_AMOUNT DECIMAL(32,6) 
            ,IA_UNWINDING_AMOUNT DECIMAL(32,6) 
            ,GROSS_CARRYING_AMOUNT DECIMAL(32,6) 
            ,UNUSED_AMOUNT DECIMAL(32,6) 
            ,RESTRUCTURE_FLAG INT 
            ,POCI_FLAG INT 
            ,LOSSRATE FLOAT 
            ,OUTSTANDING DECIMAL(32,6) 
        ) ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TMPTABLE3 || ' 
        (
            DOWNLOAD_DATE DATE 
            ,DATA_SOURCE VARCHAR(20) 
            ,ECL_UNIQUE_ID VARCHAR(100) 
            ,GROUP_SEGMENT VARCHAR(50) 
            ,ACCOUNT_STATUS VARCHAR(2) 
            ,ECL_MODEL_ID BIGINT 
            ,STAGE INT 
            ,IMPAIRED_FLAG CHAR(1) 
            ,IFRS9_CLASS VARCHAR(50) 
            ,EXCHANGE_RATE DECIMAL(32,6) 
            ,ECL_AMOUNT DECIMAL(32,6) 
            ,IA_UNWINDING_AMOUNT DECIMAL(32,6) 
            ,GROSS_CARRYING_AMOUNT DECIMAL(32,6) 
            ,UNUSED_AMOUNT DECIMAL(32,6) 
            ,ECL_AI_AMOUNT DECIMAL(32,6) 
            ,RESTRUCTURE_FLAG INT 
            ,POCI_FLAG INT 
            ,LOSSRATE FLOAT 
            ,OUTSTANDING DECIMAL(32,6) 
        ) ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'CREATE TABLE ' || V_TMPTABLE4 || ' 
        (
            DOWNLOAD_DATE DATE 
            ,DATA_SOURCE VARCHAR(20) 
            ,ECL_UNIQUE_ID VARCHAR(100) 
            ,GROUP_SEGMENT VARCHAR(50) 
            ,ACCOUNT_STATUS VARCHAR(2) 
            ,ECL_MODEL_ID BIGINT 
            ,STAGE INT 
            ,IMPAIRED_FLAG CHAR(1) 
            ,IFRS9_CLASS VARCHAR(50) 
            ,EXCHANGE_RATE DECIMAL(32,6) 
            ,ECL_AMOUNT DECIMAL(32,6) 
            ,IA_UNWINDING_AMOUNT DECIMAL(32,6) 
            ,GROSS_CARRYING_AMOUNT DECIMAL(32,6) 
            ,UNUSED_AMOUNT DECIMAL(32,6) 
            ,RESTRUCTURE_FLAG INT 
            ,POCI_FLAG INT 
            ,LOSSRATE FLOAT 
            ,OUTSTANDING DECIMAL(32,6) 
        ) ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TMPTABLE1 || ' 
        (
            DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,ECL_UNIQUE_ID 
            ,GROUP_SEGMENT 
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,GROSS_CARRYING_AMOUNT 
            ,UNUSED_AMOUNT 
            ,RESTRUCTURE_FLAG 
            ,POCI_FLAG 
            ,LOSSRATE 
            ,OUTSTANDING 
        ) SELECT 
            A.DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,A.MASTER_ID AS ECL_UNIQUE_ID 
            ,A.PRODUCT_GROUP AS GROUP_SEGMENT
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,CASE WHEN A.POCI_FLAG = 1 THEN 3 ELSE A.STAGE END AS STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,COALESCE(RATE.RATE_AMOUNT, A.EXCHANGE_RATE) AS EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,A.GROSS_CARRYING_AMOUNT 
            ,A.UNUSED_AMOUNT 
            ,0 AS RESTRUCTURE_FLAG 
            ,A.POCI_FLAG 
            ,COALESCE(A.LOSS_RATE, 0) AS LOSSRATE 
            ,COALESCE(A.OUTSTANDING, 0) AS OUTSTANDING 
        FROM VM_IMA_FACILITY_ACCOUNT A 
        LEFT JOIN IFRS_MASTER_EXCHANGE_RATE RATE 
        ON A.CURRENCY = RATE.CURRENCY 
        AND A.DOWNLOAD_DATE = RATE.DOWNLOAD_DATE 
        WHERE A.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TMPTABLE2 || ' 
        (
            DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,ECL_UNIQUE_ID 
            ,GROUP_SEGMENT 
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,GROSS_CARRYING_AMOUNT 
            ,UNUSED_AMOUNT 
            ,RESTRUCTURE_FLAG 
            ,POCI_FLAG 
            ,LOSSRATE 
            ,OUTSTANDING 
        ) SELECT 
            A.DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,A.MASTER_ID AS ECL_UNIQUE_ID 
            ,A.PRODUCT_GROUP AS GROUP_SEGMENT
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,CASE WHEN A.POCI_FLAG = 1 THEN 3 ELSE A.STAGE END AS STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,COALESCE(RATE.RATE_AMOUNT, A.EXCHANGE_RATE) AS EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,A.GROSS_CARRYING_AMOUNT 
            ,A.UNUSED_AMOUNT 
            ,0 AS RESTRUCTURE_FLAG 
            ,A.POCI_FLAG 
            ,COALESCE(A.LOSS_RATE, 0) AS LOSSRATE 
            ,COALESCE(A.OUTSTANDING, 0) AS OUTSTANDING 
        FROM VM_IMA_FACILITY_ACCOUNT A 
        LEFT JOIN IFRS_MASTER_EXCHANGE_RATE RATE 
        ON A.CURRENCY = RATE.CURRENCY 
        AND A.DOWNLOAD_DATE = RATE.DOWNLOAD_DATE 
        WHERE A.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TMPTABLE3 || ' 
        (
            DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,ECL_UNIQUE_ID 
            ,GROUP_SEGMENT 
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,GROSS_CARRYING_AMOUNT 
            ,UNUSED_AMOUNT 
            ,RESTRUCTURE_FLAG 
            ,POCI_FLAG 
            ,LOSSRATE 
            ,OUTSTANDING 
        ) SELECT 
            A.DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,A.MASTER_ID AS ECL_UNIQUE_ID 
            ,A.PRODUCT_GROUP AS GROUP_SEGMENT
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,CASE WHEN A.POCI_FLAG = 1 THEN 3 ELSE A.STAGE END AS STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,COALESCE(RATE.RATE_AMOUNT, A.EXCHANGE_RATE) AS EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,A.GROSS_CARRYING_AMOUNT 
            ,A.UNUSED_AMOUNT 
            ,0 AS RESTRUCTURE_FLAG 
            ,A.POCI_FLAG 
            ,COALESCE(A.LOSS_RATE, 0) AS LOSSRATE 
            ,COALESCE(A.OUTSTANDING, 0) AS OUTSTANDING 
        FROM VM_IMA_FACILITY_ACCOUNT A 
        LEFT JOIN IFRS_MASTER_EXCHANGE_RATE RATE 
        ON A.CURRENCY = RATE.CURRENCY 
        AND A.DOWNLOAD_DATE = RATE.DOWNLOAD_DATE 
        WHERE A.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TMPTABLE4 || ' 
        (
            DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,ECL_UNIQUE_ID 
            ,GROUP_SEGMENT 
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,GROSS_CARRYING_AMOUNT 
            ,UNUSED_AMOUNT 
            ,RESTRUCTURE_FLAG 
            ,POCI_FLAG 
            ,LOSSRATE 
            ,OUTSTANDING 
        ) SELECT 
            A.DOWNLOAD_DATE 
            ,DATA_SOURCE 
            ,A.MASTER_ID AS ECL_UNIQUE_ID 
            ,A.PRODUCT_GROUP AS GROUP_SEGMENT
            ,ACCOUNT_STATUS 
            ,ECL_MODEL_ID 
            ,CASE WHEN A.POCI_FLAG = 1 THEN 3 ELSE A.STAGE END AS STAGE 
            ,IMPAIRED_FLAG 
            ,IFRS9_CLASS 
            ,COALESCE(RATE.RATE_AMOUNT, A.EXCHANGE_RATE) AS EXCHANGE_RATE 
            ,ECL_AMOUNT 
            ,IA_UNWINDING_AMOUNT 
            ,A.GROSS_CARRYING_AMOUNT 
            ,A.UNUSED_AMOUNT 
            ,0 AS RESTRUCTURE_FLAG 
            ,A.POCI_FLAG 
            ,COALESCE(A.LOSS_RATE, 0) AS LOSSRATE 
            ,COALESCE(A.OUTSTANDING, 0) AS OUTSTANDING 
        FROM VM_IMA_FACILITY_ACCOUNT A 
        LEFT JOIN IFRS_MASTER_EXCHANGE_RATE RATE 
        ON A.CURRENCY = RATE.CURRENCY 
        AND A.DOWNLOAD_DATE = RATE.DOWNLOAD_DATE 
        WHERE A.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE ';
    EXECUTE (V_STR_QUERY);

    V_STR_QUERY := '';
    V_STR_QUERY := V_STR_QUERY || 'WITH ';
    
    V_STR_QUERY := V_STR_QUERY || 'CTE_BEGIN_BAL AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.ECL_AMOUNT ELSE 0 END END) AS STAGE1 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.ECL_AMOUNT ELSE 0 END END) AS STAGE2 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.ECL_AMOUNT ELSE 0 END END) AS STAGE3 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.OUTSTANDING ELSE 0 END END) AS OS_STAGE1 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.OUTSTANDING ELSE 0 END END) AS OS_STAGE2 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.OUTSTANDING ELSE 0 END END) AS OS_STAGE3 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.GROSS_CARRYING_AMOUNT ELSE 0 END END) AS GCA_STAGE1 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.GROSS_CARRYING_AMOUNT ELSE 0 END END) AS GCA_STAGE2 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.GROSS_CARRYING_AMOUNT ELSE 0 END END) AS GCA_STAGE3 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.UNUSED_AMT ELSE 0 END END) AS UNUSED_STAGE1 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.UNUSED_AMT ELSE 0 END END) AS UNUSED_STAGE2 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.UNUSED_AMT ELSE 0 END END) AS UNUSED_STAGE3 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.ECL_AMOUNT ELSE 0 END END) AS STAGE1_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.ECL_AMOUNT ELSE 0 END END) AS STAGE2_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.ECL_AMOUNT ELSE 0 END END) AS STAGE3_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.OUTSTANDING ELSE 0 END END) AS OS_STAGE1_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.OUTSTANDING ELSE 0 END END) AS OS_STAGE2_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.OUTSTANDING ELSE 0 END END) AS OS_STAGE3_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.GROSS_CARRYING_AMOUNT ELSE 0 END END) AS GCA_STAGE1_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.GROSS_CARRYING_AMOUNT ELSE 0 END END) AS GCA_STAGE2_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.GROSS_CARRYING_AMOUNT ELSE 0 END END) AS GCA_STAGE3_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''1'' THEN BEGINBAL.UNUSED_AMT ELSE 0 END END) AS UNUSED_STAGE1_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''2'' THEN BEGINBAL.UNUSED_AMT ELSE 0 END END) AS UNUSED_STAGE2_I 
            ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' THEN CASE WHEN BEGINBAL.STAGE = ''3'' THEN BEGINBAL.UNUSED_AMT ELSE 0 END END) AS UNUSED_STAGE3_I 
        FROM (SELECT 1 AS URUT) A 
        LEFT JOIN (
            SELECT 
                STAGE 
                ,DATA_SOURCE 
                ,GROUP_SEGMENT 
                ,IFRS9_CLASS 
                ,IMPAIRED_FLAG 
                ,SUM(COALESCE(GROSS_CARRYING_AMOUNT, 0) * COALESCE(I.EXCHANGE_RATE, 1)) AS GROSS_CARRYING_AMOUNT 
                ,SUM(COALESCE(OUTSTANDING, 0) * COALESCE(I.EXCHANGE_RATE, 1)) AS OUTSTANDING 
                ,SUM(COALESCE(UNUSED_AMOUNT, 0) * COALESCE(I.EXCHANGE_RATE, 1)) AS UNUSED_AMT 
                ,SUM(CASE WHEN POCI_FLAG = 0 THEN COALESCE(ECL_AMOUNT, 0) * COALESCE(I.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_AMOUNT 
            FROM ' || V_TMPTABLE2 || ' I 
            WHERE I.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND I.ACCOUNT_STATUS = ''A''
            GROUP BY STAGE, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS, IMPAIRED_FLAG
        ) BEGINBAL 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_BEGIN_BAL' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_11 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,SUM(TRANSFER11.ECL_PREV * -1) + SUM(TRANSFER11.ECL_PREV) AS STAGE1 
            ,0 AS STAGE2 
            ,0 AS STAGE3 
            ,SUM(TRANSFER11.OS_PREV * -1) + SUM(TRANSFER11.OS_PREV) AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,SUM(TRANSFER11.GCA_PREV * -1) + SUM(TRANSFER11.GCA_PREV) AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,SUM(TRANSFER11.UNUSED_PREV * -1) + SUM(TRANSFER11.UNUSED_PREV) AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,SUM(TRANSFER11.ECL_PREV_I * -1) + SUM(TRANSFER11.ECL_PREV_I) AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,SUM(TRANSFER11.OS_PREV_I * -1) + SUM(TRANSFER11.OS_PREV_I) AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,SUM(TRANSFER11.GCA_PREV_I * -1) + SUM(TRANSFER11.GCA_PREV_I) AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,SUM(TRANSFER11.UNUSED_PREV_I * -1) + SUM(TRANSFER11.UNUSED_PREV_I) AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 2 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 1 AND CURR.STAGE = 1 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER11 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_11' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_12 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,SUM(TRANSFER12.ECL_PREV * -1) AS STAGE1 
            ,SUM(TRANSFER12.ECL_PREV) AS STAGE2 
            ,0 AS STAGE3 
            ,SUM(TRANSFER12.OS_PREV * -1) AS OS_STAGE1 
            ,SUM(TRANSFER12.OS_PREV) AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,SUM(TRANSFER12.GCA_PREV * -1) AS GCA_STAGE1 
            ,SUM(TRANSFER12.GCA_PREV) AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,SUM(TRANSFER12.UNUSED_PREV * -1) AS UNUSED_STAGE1 
            ,SUM(TRANSFER12.UNUSED_PREV) AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,SUM(TRANSFER12.ECL_PREV_I * -1) AS STAGE1_I 
            ,SUM(TRANSFER12.ECL_PREV_I) AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,SUM(TRANSFER12.OS_PREV_I * -1) AS OS_STAGE1_I 
            ,SUM(TRANSFER12.OS_PREV_I) AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,SUM(TRANSFER12.GCA_PREV_I * -1) AS GCA_STAGE1_I 
            ,SUM(TRANSFER12.GCA_PREV_I) AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,SUM(TRANSFER12.UNUSED_PREV_I * -1) AS UNUSED_STAGE1_I 
            ,SUM(TRANSFER12.UNUSED_PREV_I) AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 3 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 1 AND CURR.STAGE = 2 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER12 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_12' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_13 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,SUM(TRANSFER13.ECL_PREV * -1) AS STAGE1 
            ,0 AS STAGE2 
            ,SUM(TRANSFER13.ECL_PREV) AS STAGE3 
            ,SUM(TRANSFER13.OS_PREV * -1) AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,SUM(TRANSFER13.OS_PREV) AS OS_STAGE3 
            ,SUM(TRANSFER13.GCA_PREV * -1) AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,SUM(TRANSFER13.GCA_PREV) AS GCA_STAGE3 
            ,SUM(TRANSFER13.UNUSED_PREV * -1) AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,SUM(TRANSFER13.UNUSED_PREV) AS UNUSED_STAGE3 
            ,SUM(TRANSFER13.ECL_PREV_I * -1) AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,SUM(TRANSFER13.ECL_PREV_I) AS STAGE3_I 
            ,SUM(TRANSFER13.OS_PREV_I * -1) AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,SUM(TRANSFER13.OS_PREV_I) AS OS_STAGE3_I 
            ,SUM(TRANSFER13.GCA_PREV_I * -1) AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,SUM(TRANSFER13.GCA_PREV_I) AS GCA_STAGE3_I 
            ,SUM(TRANSFER13.UNUSED_PREV_I * -1) AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,SUM(TRANSFER13.UNUSED_PREV_I) AS UNUSED_STAGE3_I 
        FROM (SELECT 4 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 1 AND CURR.STAGE = 3 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER13 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_13' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_21 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,SUM(TRANSFER21.ECL_PREV) AS STAGE1 
            ,SUM(TRANSFER21.ECL_PREV * -1) AS STAGE2 
            ,0 AS STAGE3 
            ,SUM(TRANSFER21.OS_PREV) AS OS_STAGE1 
            ,SUM(TRANSFER21.OS_PREV * -1) AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,SUM(TRANSFER21.GCA_PREV) AS GCA_STAGE1 
            ,SUM(TRANSFER21.GCA_PREV * -1) AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,SUM(TRANSFER21.UNUSED_PREV) AS UNUSED_STAGE1 
            ,SUM(TRANSFER21.UNUSED_PREV * -1) AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,SUM(TRANSFER21.ECL_PREV_I) AS STAGE1_I 
            ,SUM(TRANSFER21.ECL_PREV_I * -1) AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,SUM(TRANSFER21.OS_PREV_I) AS OS_STAGE1_I 
            ,SUM(TRANSFER21.OS_PREV_I * -1) AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,SUM(TRANSFER21.GCA_PREV_I) AS GCA_STAGE1_I 
            ,SUM(TRANSFER21.GCA_PREV_I * -1) AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,SUM(TRANSFER21.UNUSED_PREV_I) AS UNUSED_STAGE1_I 
            ,SUM(TRANSFER21.UNUSED_PREV_I * -1) AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 5 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 2 AND CURR.STAGE = 1 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER21 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_21' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_22 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,0 AS STAGE1 
            ,SUM(TRANSFER22.ECL_PREV * -1) + SUM(TRANSFER22.ECL_PREV) AS STAGE2 
            ,0 AS STAGE3 
            ,0 AS OS_STAGE1 
            ,SUM(TRANSFER22.OS_PREV * -1) + SUM(TRANSFER22.OS_PREV) AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,SUM(TRANSFER22.GCA_PREV * -1) + SUM(TRANSFER22.GCA_PREV) AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,SUM(TRANSFER22.UNUSED_PREV * -1) + SUM(TRANSFER22.UNUSED_PREV) AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,SUM(TRANSFER22.ECL_PREV_I * -1) + SUM(TRANSFER22.ECL_PREV_I) AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,SUM(TRANSFER22.OS_PREV_I * -1) + SUM(TRANSFER22.OS_PREV_I) AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,SUM(TRANSFER22.GCA_PREV_I * -1) + SUM(TRANSFER22.GCA_PREV_I) AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,SUM(TRANSFER22.UNUSED_PREV_I * -1) + SUM(TRANSFER22.UNUSED_PREV_I) AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 6 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 2 AND CURR.STAGE = 2 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER22 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_22' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_23 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,0 AS STAGE1 
            ,SUM(TRANSFER23.ECL_PREV * -1) AS STAGE2 
            ,SUM(TRANSFER23.ECL_PREV) AS STAGE3 
            ,0 AS OS_STAGE1 
            ,SUM(TRANSFER23.OS_PREV * -1) AS OS_STAGE2 
            ,SUM(TRANSFER23.OS_PREV) AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,SUM(TRANSFER23.GCA_PREV * -1) AS GCA_STAGE2 
            ,SUM(TRANSFER23.GCA_PREV) AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,SUM(TRANSFER23.UNUSED_PREV * -1) AS UNUSED_STAGE2 
            ,SUM(TRANSFER23.UNUSED_PREV) AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,SUM(TRANSFER23.ECL_PREV_I * -1) AS STAGE2_I 
            ,SUM(TRANSFER23.ECL_PREV_I) AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,SUM(TRANSFER23.OS_PREV_I * -1) AS OS_STAGE2_I 
            ,SUM(TRANSFER23.OS_PREV_I) AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,SUM(TRANSFER23.GCA_PREV_I * -1) AS GCA_STAGE2_I 
            ,SUM(TRANSFER23.GCA_PREV_I) AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,SUM(TRANSFER23.UNUSED_PREV_I * -1) AS UNUSED_STAGE2_I 
            ,SUM(TRANSFER23.UNUSED_PREV_I) AS UNUSED_STAGE3_I 
        FROM (SELECT 7 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 2 AND CURR.STAGE = 3 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER23 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_23' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_31 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,SUM(TRANSFER31.ECL_PREV) AS STAGE1 
            ,0 AS STAGE2 
            ,SUM(TRANSFER31.ECL_PREV * -1) AS STAGE3 
            ,SUM(TRANSFER31.OS_PREV) AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,SUM(TRANSFER31.OS_PREV * -1) AS OS_STAGE3 
            ,SUM(TRANSFER31.GCA_PREV) AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,SUM(TRANSFER31.GCA_PREV * -1) AS GCA_STAGE3 
            ,SUM(TRANSFER31.UNUSED_PREV) AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,SUM(TRANSFER31.UNUSED_PREV * -1) AS UNUSED_STAGE3 
            ,SUM(TRANSFER31.ECL_PREV_I) AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,SUM(TRANSFER31.ECL_PREV_I * -1) AS STAGE3_I 
            ,SUM(TRANSFER31.OS_PREV_I) AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,SUM(TRANSFER31.OS_PREV_I * -1) AS OS_STAGE3_I 
            ,SUM(TRANSFER31.GCA_PREV_I) AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,SUM(TRANSFER31.GCA_PREV_I * -1) AS GCA_STAGE3_I 
            ,SUM(TRANSFER31.UNUSED_PREV_I) AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,SUM(TRANSFER31.UNUSED_PREV_I * -1) AS UNUSED_STAGE3_I 
        FROM (SELECT 8 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 3 AND CURR.STAGE = 1 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER31 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_31' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_32 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,0 AS STAGE1 
            ,SUM(TRANSFER32.ECL_PREV) AS STAGE2 
            ,SUM(TRANSFER32.ECL_PREV * -1) AS STAGE3 
            ,0 AS OS_STAGE1 
            ,SUM(TRANSFER32.OS_PREV) AS OS_STAGE2 
            ,SUM(TRANSFER32.OS_PREV * -1) AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,SUM(TRANSFER32.GCA_PREV) AS GCA_STAGE2 
            ,SUM(TRANSFER32.GCA_PREV * -1) AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,SUM(TRANSFER32.UNUSED_PREV) AS UNUSED_STAGE2 
            ,SUM(TRANSFER32.UNUSED_PREV * -1) AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,SUM(TRANSFER32.ECL_PREV_I) AS STAGE2_I 
            ,SUM(TRANSFER32.ECL_PREV_I * -1) AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,SUM(TRANSFER32.OS_PREV_I) AS OS_STAGE2_I 
            ,SUM(TRANSFER32.OS_PREV_I * -1) AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,SUM(TRANSFER32.GCA_PREV_I) AS GCA_STAGE2_I 
            ,SUM(TRANSFER32.GCA_PREV_I * -1) AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,SUM(TRANSFER32.UNUSED_PREV_I) AS UNUSED_STAGE2_I 
            ,SUM(TRANSFER32.UNUSED_PREV_I * -1) AS UNUSED_STAGE3_I 
        FROM (SELECT 9 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 3 AND CURR.STAGE = 2 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER32 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_32' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_TRANSFER_33 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,0 AS STAGE1 
            ,0 AS STAGE2 
            ,SUM(TRANSFER33.ECL_PREV * -1) + SUM(TRANSFER33.ECL_PREV) AS STAGE3 
            ,0 AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,SUM(TRANSFER33.OS_PREV * -1) + SUM(TRANSFER33.OS_PREV) AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,SUM(TRANSFER33.GCA_PREV * -1) + SUM(TRANSFER33.GCA_PREV) AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,SUM(TRANSFER33.UNUSED_PREV * -1) + SUM(TRANSFER33.UNUSED_PREV) AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,SUM(TRANSFER33.ECL_PREV_I * -1) + SUM(TRANSFER33.ECL_PREV_I) AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,SUM(TRANSFER33.OS_PREV_I * -1) + SUM(TRANSFER33.OS_PREV_I) AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,SUM(TRANSFER33.GCA_PREV_I * -1) + SUM(TRANSFER33.GCA_PREV_I) AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,SUM(TRANSFER33.UNUSED_PREV_I * -1) + SUM(TRANSFER33.UNUSED_PREV_I) AS UNUSED_STAGE3_I 
        FROM (SELECT 10 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.DATA_SOURCE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS POCI 
                ,SUM(CASE 
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN 0
                    WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) 
                    WHEN PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) * -1 
                END) AS OS_POCI 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1 )) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.STAGE = 3 AND CURR.STAGE = 3 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.OUTSTANDING <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.OUTSTANDING <> 0) 
            GROUP BY PREV.STAGE, PREV.DATA_SOURCE, PREV.GROUP_SEGMENT, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) TRANSFER33 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_TRANSFER_33' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_NEW1 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN ECL_CURR ELSE 0 END) AS STAGE1 
            ,0 AS STAGE2 
            ,0 AS STAGE3 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN OS_CURR ELSE 0 END) AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN GCA_CURR ELSE 0 END) AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN UNUSED_CURR ELSE 0 END) AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN ECL_CURR_I ELSE 0 END) AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN OS_CURR_I ELSE 0 END) AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN GCA_CURR_I ELSE 0 END) AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,SUM(CASE WHEN NEW1.STAGE = 1 THEN UNUSED_CURR_I ELSE 0 END) AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 11 AS URUT) A 
        LEFT JOIN (
            SELECT 
                CURR.STAGE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.DATA_SOURCE 
                ,CURR.IFRS9_CLASS 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.UNUSED_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.UNUSED_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            RIGHT JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND PREV.RESTRUCTURE_FLAG = 0 
            WHERE CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND CURR.STAGE = 1 
            AND CURR.RESTRUCTURE_FLAG = 0 
            GROUP BY CURR.STAGE, CURR.GROUP_SEGMENT, CURR.DATA_SOURCE, CURR.IFRS9_CLASS, CURR.IMPAIRED_FLAG 
        ) NEW1 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_NEW1' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_NEW2 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,0 AS STAGE1 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN ECL_CURR ELSE 0 END) AS STAGE2 
            ,0 AS STAGE3 
            ,0 AS OS_STAGE1 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN OS_CURR ELSE 0 END) AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN GCA_CURR ELSE 0 END) AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN UNUSED_CURR ELSE 0 END) AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN ECL_CURR_I ELSE 0 END) AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN OS_CURR_I ELSE 0 END) AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN GCA_CURR_I ELSE 0 END) AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,SUM(CASE WHEN NEW2.STAGE = 2 THEN UNUSED_CURR_I ELSE 0 END) AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 12 AS URUT) A 
        LEFT JOIN (
            SELECT 
                CURR.STAGE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.DATA_SOURCE 
                ,CURR.IFRS9_CLASS 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.UNUSED_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.UNUSED_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            RIGHT JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND PREV.RESTRUCTURE_FLAG = 0 
            WHERE CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND CURR.STAGE = 2 
            AND CURR.RESTRUCTURE_FLAG = 0 
            GROUP BY CURR.STAGE, CURR.GROUP_SEGMENT, CURR.DATA_SOURCE, CURR.IFRS9_CLASS, CURR.IMPAIRED_FLAG 
        ) NEW2 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_NEW2' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_NEW3 AS (
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,0 AS STAGE1 
            ,0 AS STAGE2 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN ECL_CURR ELSE 0 END) AS STAGE3 
            ,0 AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN OS_CURR ELSE 0 END) AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN GCA_CURR ELSE 0 END) AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN UNUSED_CURR ELSE 0 END) AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN ECL_CURR_I ELSE 0 END) AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN OS_CURR_I ELSE 0 END) AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN GCA_CURR_I ELSE 0 END) AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,SUM(CASE WHEN NEW3.STAGE = 3 THEN UNUSED_CURR_I ELSE 0 END) AS UNUSED_STAGE3_I 
        FROM (SELECT 13 AS URUT) A 
        LEFT JOIN (
            SELECT 
                CURR.STAGE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.DATA_SOURCE 
                ,CURR.IFRS9_CLASS 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.UNUSED_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_CURR_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.UNUSED_AMOUNT, 0) * COALESCE(CURR.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            RIGHT JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND PREV.RESTRUCTURE_FLAG = 0 
            WHERE CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND CURR.STAGE = 3 
            AND CURR.RESTRUCTURE_FLAG = 0 
            GROUP BY CURR.STAGE, CURR.GROUP_SEGMENT, CURR.DATA_SOURCE, CURR.IFRS9_CLASS, CURR.IMPAIRED_FLAG 
        ) NEW3 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_NEW3' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_INCR AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(ECL_MOVEMENT_I_POCI - ECL_PARAM_I_POCI) AS POCI 
            ,SUM(OS_MOVEMENT_I_POCI) AS OS_POCI 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN (ECL_MOVEMENT - ECL_PARAM) ELSE 0 END) STAGE1 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN (ECL_MOVEMENT - ECL_PARAM) ELSE 0 END) STAGE2 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN (ECL_MOVEMENT - ECL_PARAM) ELSE 0 END) STAGE3 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN OS_MOVEMENT ELSE 0 END) OS_STAGE1 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN OS_MOVEMENT ELSE 0 END) OS_STAGE2 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN OS_MOVEMENT ELSE 0 END) OS_STAGE3 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN GCA_MOVEMENT ELSE 0 END) GCA_STAGE1 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN GCA_MOVEMENT ELSE 0 END) GCA_STAGE2 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN GCA_MOVEMENT ELSE 0 END) GCA_STAGE3 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN UNUSED_CURR ELSE 0 END) UNUSED_STAGE1 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN UNUSED_CURR ELSE 0 END) UNUSED_STAGE2 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN UNUSED_CURR ELSE 0 END) UNUSED_STAGE3 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN (ECL_MOVEMENT_I - ECL_PARAM_I) ELSE 0 END) STAGE1_I 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN (ECL_MOVEMENT_I - ECL_PARAM_I) ELSE 0 END) STAGE2_I 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN (ECL_MOVEMENT_I - ECL_PARAM_I) ELSE 0 END) STAGE3_I 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN OS_MOVEMENT_I ELSE 0 END) OS_STAGE1_I 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN OS_MOVEMENT_I ELSE 0 END) OS_STAGE2_I 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN OS_MOVEMENT_I ELSE 0 END) OS_STAGE3_I 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN GCA_MOVEMENT_I ELSE 0 END) GCA_STAGE1_I 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN GCA_MOVEMENT_I ELSE 0 END) GCA_STAGE2_I 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN GCA_MOVEMENT_I ELSE 0 END) GCA_STAGE3_I 
            ,SUM(CASE WHEN INCR.STAGE = 1 THEN UNUSED_CURR_I ELSE 0 END) UNUSED_STAGE1_I 
            ,SUM(CASE WHEN INCR.STAGE = 2 THEN UNUSED_CURR_I ELSE 0 END) UNUSED_STAGE2_I 
            ,SUM(CASE WHEN INCR.STAGE = 3 THEN UNUSED_CURR_I ELSE 0 END) UNUSED_STAGE3_I 
        FROM (SELECT 14 AS URUT) A 
        LEFT JOIN (
            SELECT 
                CURR.STAGE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.DATA_SOURCE 
                ,CURR.IFRS9_CLASS 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 1 THEN (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_MOVEMENT_I_POCI 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 1 THEN COALESCE(CURR.OUTSTANDING, 0) * (COALESCE(CURR.LOSSRATE, 0) - COALESCE(PREV.LOSSRATE, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_PARAM_I_POCI 
                ,0 AS OS_MOVEMENT_I_POCI 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.OUTSTANDING, 0) * (COALESCE(CURR.LOSSRATE, 0) - COALESCE(PREV.LOSSRATE, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_PARAM 
                ,0 AS OS_MOVEMENT 
                ,0 AS GCA_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.OUTSTANDING, 0) * (COALESCE(CURR.LOSSRATE, 0) - COALESCE(PREV.LOSSRATE, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_PARAM_I 
                ,0 AS OS_MOVEMENT_I 
                ,0 AS GCA_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND PREV.RESTRUCTURE_FLAG = 0 
            AND CURR.RESTRUCTURE_FLAG = 0 
            AND (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0) > 0) 
            GROUP BY CURR.STAGE, CURR.GROUP_SEGMENT, CURR.DATA_SOURCE, CURR.IFRS9_CLASS, CURR.IMPAIRED_FLAG 
            UNION 
            SELECT 
                CURR.STAGE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.DATA_SOURCE 
                ,CURR.IFRS9_CLASS 
                ,0 AS ECL_MOVEMENT_I_POCI 
                ,0 AS ECL_PARAM_I_POCI 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 1 AND COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) < 0 THEN (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS OS_MOVEMENT_I_POCI 
                ,0 ECL_MOVEMENT 
                ,0 AS ECL_PARAM 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) > 0 THEN (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS OS_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) > 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS GCA_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR 
                ,0 AS ECL_MOVEMENT_I 
                ,0 AS ECL_PARAM_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) > 0 THEN (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS OS_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) > 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS GCA_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND PREV.RESTRUCTURE_FLAG = 0 
            AND CURR.RESTRUCTURE_FLAG = 0 
            AND (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) > 0 AND COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) > 0) 
            GROUP BY CURR.STAGE, CURR.GROUP_SEGMENT, CURR.DATA_SOURCE, CURR.IFRS9_CLASS, CURR.IMPAIRED_FLAG 
        ) INCR 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_INCR' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_CLSE1 AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN ECL_PREV ELSE 0 END) * -1) AS STAGE1 
            ,0 AS STAGE2 
            ,0 AS STAGE3 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN OS_PREV ELSE 0 END) * -1) AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN GCA_PREV ELSE 0 END) * -1) AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN UNUSED_PREV ELSE 0 END) * -1) AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN ECL_PREV_I ELSE 0 END) * -1) AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN OS_PREV_I ELSE 0 END) * -1) AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN GCA_PREV_I ELSE 0 END) * -1) AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,(SUM(CASE WHEN CLSE1.STAGE = 1 THEN UNUSED_PREV_I ELSE 0 END) * -1) AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 15 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.DATA_SOURCE 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            LEFT JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND CURR.ACCOUNT_STATUS IN (''A'', ''W'') 
            AND CURR.RESTRUCTURE_FLAG = 0 
            WHERE ((CURR.STAGE = 0 AND CURR.ACCOUNT_STATUS <> ''W'') OR CURR.STAGE IS NULL) 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND PREV.STAGE = 1 
            AND PREV.RESTRUCTURE_FLAG = 0 
            GROUP BY PREV.STAGE, PREV.GROUP_SEGMENT, PREV.DATA_SOURCE, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) CLSE1 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_CLSE1' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_CLSE2 AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,0 AS STAGE1 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN ECL_PREV ELSE 0 END) * -1) AS STAGE2 
            ,0 AS STAGE3 
            ,0 AS OS_STAGE1 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN OS_PREV ELSE 0 END) * -1) AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN GCA_PREV ELSE 0 END) * -1) AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN UNUSED_PREV ELSE 0 END) * -1) AS UNUSED_STAGE2 
            ,0 AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN ECL_PREV_I ELSE 0 END) * -1) AS STAGE2_I 
            ,0 AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN OS_PREV_I ELSE 0 END) * -1) AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN GCA_PREV_I ELSE 0 END) * -1) AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,(SUM(CASE WHEN CLSE2.STAGE = 2 THEN UNUSED_PREV_I ELSE 0 END) * -1) AS UNUSED_STAGE2_I 
            ,0 AS UNUSED_STAGE3_I 
        FROM (SELECT 16 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.DATA_SOURCE 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            LEFT JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND CURR.ACCOUNT_STATUS IN (''A'', ''W'') 
            AND CURR.RESTRUCTURE_FLAG = 0 
            WHERE ((CURR.STAGE = 0 AND CURR.ACCOUNT_STATUS <> ''W'') OR CURR.STAGE IS NULL) 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND PREV.STAGE = 2 
            AND PREV.RESTRUCTURE_FLAG = 0 
            GROUP BY PREV.STAGE, PREV.GROUP_SEGMENT, PREV.DATA_SOURCE, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) CLSE2 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_CLSE2' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_CLSE3 AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,0 AS STAGE1 
            ,0 AS STAGE2 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN ECL_PREV ELSE 0 END) * -1) AS STAGE3 
            ,0 AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN OS_PREV ELSE 0 END) * -1) AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN GCA_PREV ELSE 0 END) * -1) AS GCA_STAGE3 
            ,0 AS UNUSED_STAGE1 
            ,0 AS UNUSED_STAGE2 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN UNUSED_PREV ELSE 0 END) * -1) AS UNUSED_STAGE3 
            ,0 AS STAGE1_I 
            ,0 AS STAGE2_I 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN ECL_PREV_I ELSE 0 END) * -1) AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN OS_PREV_I ELSE 0 END) * -1) AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN GCA_PREV_I ELSE 0 END) * -1) AS GCA_STAGE3_I 
            ,0 AS UNUSED_STAGE1_I 
            ,0 AS UNUSED_STAGE2_I 
            ,(SUM(CASE WHEN CLSE3.STAGE = 3 THEN UNUSED_PREV_I ELSE 0 END) * -1) AS UNUSED_STAGE3_I 
        FROM (SELECT 17 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                PREV.STAGE 
                ,PREV.GROUP_SEGMENT 
                ,PREV.DATA_SOURCE 
                ,PREV.IFRS9_CLASS 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_PREV 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.ECL_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS ECL_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.OUTSTANDING, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS OS_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS GCA_PREV_I 
                ,SUM(CASE WHEN PREV.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 THEN (COALESCE(PREV.UNUSED_AMOUNT, 0) * COALESCE(PREV.EXCHANGE_RATE, 1)) ELSE 0 END) AS UNUSED_PREV_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            LEFT JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND CURR.ACCOUNT_STATUS IN (''A'', ''W'') 
            AND CURR.RESTRUCTURE_FLAG = 0 
            WHERE ((CURR.STAGE = 0 AND CURR.ACCOUNT_STATUS <> ''W'') OR CURR.STAGE IS NULL) 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND PREV.STAGE = 3 
            AND PREV.RESTRUCTURE_FLAG = 0 
            GROUP BY PREV.STAGE, PREV.GROUP_SEGMENT, PREV.DATA_SOURCE, PREV.IFRS9_CLASS, PREV.IMPAIRED_FLAG 
        ) CLSE3 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_CLSE3' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_DECR AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(ECL_MOVEMENT_I_POCI - ECL_PARAM_I_POCI) AS POCI 
            ,SUM(OS_MOVEMENT_I_POCI) AS OS_POCI 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN (ECL_MOVEMENT - ECL_PARAM) ELSE 0 END) AS STAGE1 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN (ECL_MOVEMENT - ECL_PARAM) ELSE 0 END) AS STAGE2 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN (ECL_MOVEMENT - ECL_PARAM) ELSE 0 END) AS STAGE3 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN OS_MOVEMENT ELSE 0 END) AS OS_STAGE1 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN OS_MOVEMENT ELSE 0 END) AS OS_STAGE2 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN OS_MOVEMENT ELSE 0 END) AS OS_STAGE3 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN GCA_MOVEMENT ELSE 0 END) AS GCA_STAGE1 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN GCA_MOVEMENT ELSE 0 END) AS GCA_STAGE2 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN GCA_MOVEMENT ELSE 0 END) AS GCA_STAGE3 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN UNUSED_CURR ELSE 0 END) AS UNUSED_STAGE1 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN UNUSED_CURR ELSE 0 END) AS UNUSED_STAGE2 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN UNUSED_CURR ELSE 0 END) AS UNUSED_STAGE3 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN (ECL_MOVEMENT_I - ECL_PARAM_I) ELSE 0 END) AS STAGE1_I 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN (ECL_MOVEMENT_I - ECL_PARAM_I) ELSE 0 END) AS STAGE2_I 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN (ECL_MOVEMENT_I - ECL_PARAM_I) ELSE 0 END) AS STAGE3_I 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN OS_MOVEMENT_I ELSE 0 END) AS OS_STAGE1_I 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN OS_MOVEMENT_I ELSE 0 END) AS OS_STAGE2_I 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN OS_MOVEMENT_I ELSE 0 END) AS OS_STAGE3_I 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN GCA_MOVEMENT_I ELSE 0 END) AS GCA_STAGE1_I 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN GCA_MOVEMENT_I ELSE 0 END) AS GCA_STAGE2_I 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN GCA_MOVEMENT_I ELSE 0 END) AS GCA_STAGE3_I 
            ,SUM(CASE WHEN DECR.STAGE = 1 THEN UNUSED_CURR_I ELSE 0 END) AS UNUSED_STAGE1_I 
            ,SUM(CASE WHEN DECR.STAGE = 2 THEN UNUSED_CURR_I ELSE 0 END) AS UNUSED_STAGE2_I 
            ,SUM(CASE WHEN DECR.STAGE = 3 THEN UNUSED_CURR_I ELSE 0 END) AS UNUSED_STAGE3_I 
        FROM (SELECT 18 AS URUT) A 
        LEFT JOIN (
            SELECT 
                CURR.STAGE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.DATA_SOURCE 
                ,CURR.IFRS9_CLASS 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 1 THEN (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_MOVEMENT_I_POCI 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 1 THEN COALESCE(CURR.OUTSTANDING, 0) * (COALESCE(CURR.LOSSRATE, 0) - COALESCE(PREV.LOSSRATE, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_PARAM_I_POCI 
                ,0 AS OS_MOVEMENT_I_POCI 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.OUTSTANDING, 0) * (COALESCE(CURR.LOSSRATE, 0) - COALESCE(PREV.LOSSRATE, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_PARAM 
                ,0 AS OS_MOVEMENT 
                ,0 AS GCA_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.OUTSTANDING, 0) * (COALESCE(CURR.LOSSRATE, 0) - COALESCE(PREV.LOSSRATE, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) AS ECL_PARAM_I 
                ,0 AS OS_MOVEMENT_I 
                ,0 AS GCA_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND (PREV.ACCOUNT_STATUS = ''A'' AND PREV.ECL_AMOUNT <> 0) 
            AND (CURR.ACCOUNT_STATUS = ''A'' AND CURR.ECL_AMOUNT <> 0) 
            AND PREV.RESTRUCTURE_FLAG = 0 
            AND CURR.RESTRUCTURE_FLAG = 0 
            AND (COALESCE(CURR.ECL_AMOUNT, 0) - COALESCE(PREV.ECL_AMOUNT, 0) > 0) 
            GROUP BY CURR.STAGE, CURR.GROUP_SEGMENT, CURR.DATA_SOURCE, CURR.IFRS9_CLASS, CURR.IMPAIRED_FLAG 
            UNION 
            SELECT 
                CURR.STAGE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.DATA_SOURCE 
                ,CURR.IFRS9_CLASS 
                ,0 AS ECL_MOVEMENT_I_POCI 
                ,0 AS ECL_PARAM_I_POCI 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 1 AND COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) < 0 THEN (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS OS_MOVEMENT_I_POCI 
                ,0 ECL_MOVEMENT 
                ,0 AS ECL_PARAM 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) < 0 THEN (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS OS_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) < 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS GCA_MOVEMENT 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR 
                ,0 AS ECL_MOVEMENT_I 
                ,0 AS ECL_PARAM_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) < 0 THEN (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS OS_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 AND COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) < 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0)) * COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) AS GCA_MOVEMENT_I 
                ,SUM(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND CURR.POCI_FLAG = 0 THEN COALESCE(CURR.UNUSED_AMOUNT, 0) ELSE 0 END) AS UNUSED_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            WHERE PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND PREV.RESTRUCTURE_FLAG = 0 
            AND CURR.RESTRUCTURE_FLAG = 0 
            AND PREV.OUTSTANDING <> 0 
            AND CURR.OUTSTANDING <> 0 
            AND (COALESCE(CURR.OUTSTANDING, 0) - COALESCE(PREV.OUTSTANDING, 0) < 0 AND COALESCE(CURR.GROSS_CARRYING_AMOUNT, 0) - COALESCE(PREV.GROSS_CARRYING_AMOUNT, 0) < 0) 
            GROUP BY CURR.STAGE, CURR.GROUP_SEGMENT, CURR.DATA_SOURCE, CURR.IFRS9_CLASS, CURR.IMPAIRED_FLAG 
        ) DECR 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_DECR' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_CHANGE_PARAM AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,0 AS POCI 
            ,0 AS OS_POCI 
            ,SUM(CASE WHEN CHANGE_PARAM.STAGE = 1 THEN OS_CURR * (LOSSRATE_CURR - LOSSRATE_PREV) ELSE 0 END) AS STAGE1 
            ,SUM(CASE WHEN CHANGE_PARAM.STAGE = 2 THEN OS_CURR * (LOSSRATE_CURR - LOSSRATE_PREV) ELSE 0 END) AS STAGE2 
            ,SUM(CASE WHEN CHANGE_PARAM.STAGE = 3 THEN OS_CURR * (LOSSRATE_CURR - LOSSRATE_PREV) ELSE 0 END) AS STAGE3 
            ,0 AS OS_STAGE1 
            ,0 AS OS_STAGE2 
            ,0 AS OS_STAGE3 
            ,0 AS GCA_STAGE1 
            ,0 AS GCA_STAGE2 
            ,0 AS GCA_STAGE3 
            ,0 AS UNUSED_AMT_STAGE1 
            ,0 AS UNUSED_AMT_STAGE2 
            ,0 AS UNUSED_AMT_STAGE3 
            ,SUM(CASE WHEN CHANGE_PARAM.STAGE = 1 THEN OS_CURR_I * (LOSSRATE_CURR_I - LOSSRATE_PREV_I) ELSE 0 END) AS STAGE1_I 
            ,SUM(CASE WHEN CHANGE_PARAM.STAGE = 2 THEN OS_CURR_I * (LOSSRATE_CURR_I - LOSSRATE_PREV_I) ELSE 0 END) AS STAGE2_I 
            ,SUM(CASE WHEN CHANGE_PARAM.STAGE = 3 THEN OS_CURR_I * (LOSSRATE_CURR_I - LOSSRATE_PREV_I) ELSE 0 END) AS STAGE3_I 
            ,0 AS OS_STAGE1_I 
            ,0 AS OS_STAGE2_I 
            ,0 AS OS_STAGE3_I 
            ,0 AS GCA_STAGE1_I 
            ,0 AS GCA_STAGE2_I 
            ,0 AS GCA_STAGE3_I 
            ,0 AS UNUSED_AMT_STAGE1_I 
            ,0 AS UNUSED_AMT_STAGE2_I 
            ,0 AS UNUSED_AMT_STAGE3_I 
        FROM (SELECT 19 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                CURR.ECL_UNIQUE_ID 
                ,CURR.STAGE 
                ,CURR.DATA_SOURCE 
                ,CURR.GROUP_SEGMENT 
                ,CURR.IFRS9_CLASS 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING,0) * COALESCE(CURR.EXCHANGE_RATE,1)) ELSE 0 END) AS OS_CURR 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT,0) * COALESCE(CURR.EXCHANGE_RATE,1)) ELSE 0 END) AS GCA_CURR 
	            ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN PREV.LOSSRATE ELSE 0 END) LOSSRATE_PREV 
	            ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN CURR.LOSSRATE ELSE 0 END) LOSSRATE_CURR 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.OUTSTANDING,0) * COALESCE(CURR.EXCHANGE_RATE,1)) ELSE 0 END) AS OS_CURR_I 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' AND PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 0 THEN (COALESCE(CURR.GROSS_CARRYING_AMOUNT,0) * COALESCE(CURR.EXCHANGE_RATE,1)) ELSE 0 END) AS GCA_CURR_I 
	            ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN PREV.LOSSRATE ELSE 0 END) LOSSRATE_PREV_I 
	            ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN CURR.LOSSRATE ELSE 0 END) LOSSRATE_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            WHERE (COALESCE(CURR.OUTSTANDING, 0) * (COALESCE(CURR.LOSSRATE, 0) - COALESCE(PREV.LOSSRATE, 0)) * COALESCE(CURR.EXCHANGE_RATE, 1)) <> 0 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND CURR.RESTRUCTURE_FLAG = 0 
        ) CHANGE_PARAM 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_CHANGE_PARAM' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_FX_IMPACT AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 1 THEN ECL_PREV * (RATE_CURR - RATE_PREV) ELSE 0 END) AS STAGE1 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 2 THEN ECL_PREV * (RATE_CURR - RATE_PREV) ELSE 0 END) AS STAGE2 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 3 THEN ECL_PREV * (RATE_CURR - RATE_PREV) ELSE 0 END) AS STAGE3 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 1 THEN (OS_PREV * (RATE_CURR - RATE_PREV)) + ((OS_CURR - OS_PREV) * (RATE_CURR - RATE_PREV)) ELSE 0 END) AS OS_STAGE1 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 2 THEN (OS_PREV * (RATE_CURR - RATE_PREV)) + ((OS_CURR - OS_PREV) * (RATE_CURR - RATE_PREV)) ELSE 0 END) AS OS_STAGE2 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 3 THEN (OS_PREV * (RATE_CURR - RATE_PREV)) + ((OS_CURR - OS_PREV) * (RATE_CURR - RATE_PREV)) ELSE 0 END) AS OS_STAGE3 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 1 THEN (GCA_PREV * (RATE_CURR - RATE_PREV)) + ((GCA_CURR - GCA_PREV) * (RATE_CURR - RATE_PREV)) ELSE 0 END) AS GCA_STAGE1 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 2 THEN (GCA_PREV * (RATE_CURR - RATE_PREV)) + ((GCA_CURR - GCA_PREV) * (RATE_CURR - RATE_PREV)) ELSE 0 END) AS GCA_STAGE2 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 3 THEN (GCA_PREV * (RATE_CURR - RATE_PREV)) + ((GCA_CURR - GCA_PREV) * (RATE_CURR - RATE_PREV)) ELSE 0 END) AS GCA_STAGE3 
            ,0 AS UNUSED_AMT_STAGE1 
            ,0 AS UNUSED_AMT_STAGE2 
            ,0 AS UNUSED_AMT_STAGE3 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 1 THEN ECL_PREV_I * (RATE_CURR_I - RATE_PREV_I) ELSE 0 END) AS STAGE1_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 2 THEN ECL_PREV_I * (RATE_CURR_I - RATE_PREV_I) ELSE 0 END) AS STAGE2_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 3 THEN ECL_PREV_I * (RATE_CURR_I - RATE_PREV_I) ELSE 0 END) AS STAGE3_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 1 THEN (OS_PREV_I * (RATE_CURR_I - RATE_PREV_I)) + ((OS_CURR_I - OS_PREV_I) * (RATE_CURR_I - RATE_PREV_I)) ELSE 0 END) AS OS_STAGE1_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 2 THEN (OS_PREV_I * (RATE_CURR_I - RATE_PREV_I)) + ((OS_CURR_I - OS_PREV_I) * (RATE_CURR_I - RATE_PREV_I)) ELSE 0 END) AS OS_STAGE2_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 3 THEN (OS_PREV_I * (RATE_CURR_I - RATE_PREV_I)) + ((OS_CURR_I - OS_PREV_I) * (RATE_CURR_I - RATE_PREV_I)) ELSE 0 END) AS OS_STAGE3_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 1 THEN (GCA_PREV_I * (RATE_CURR_I - RATE_PREV_I)) + ((GCA_CURR_I - GCA_PREV_I) * (RATE_CURR_I - RATE_PREV_I)) ELSE 0 END) AS GCA_STAGE1_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 2 THEN (GCA_PREV_I * (RATE_CURR_I - RATE_PREV_I)) + ((GCA_CURR_I - GCA_PREV_I) * (RATE_CURR_I - RATE_PREV_I)) ELSE 0 END) AS GCA_STAGE2_I 
            ,SUM(CASE WHEN FX_IMPACT.STAGE = 3 THEN (GCA_PREV_I * (RATE_CURR_I - RATE_PREV_I)) + ((GCA_CURR_I - GCA_PREV_I) * (RATE_CURR_I - RATE_PREV_I)) ELSE 0 END) AS GCA_STAGE3_I 
            ,0 AS UNUSED_AMT_STAGE1_I 
            ,0 AS UNUSED_AMT_STAGE2_I 
            ,0 AS UNUSED_AMT_STAGE3_I 
        FROM (SELECT 20 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                CURR.ECL_UNIQUE_ID
                ,CURR.STAGE
                ,CURR.DATA_SOURCE
                ,CURR.GROUP_SEGMENT
                ,CURR.IFRS9_CLASS
                ,(CASE WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(CURR.ECL_AMOUNT,0) * COALESCE(CURR.EXCHANGE_RATE,1)) - (COALESCE(PREV.ECL_AMOUNT,0) * COALESCE(PREV.EXCHANGE_RATE,1)) ELSE 0 END) POCI 
                ,(CASE WHEN PREV.POCI_FLAG = 0 AND CURR.POCI_FLAG = 1 OR PREV.POCI_FLAG = 1 AND CURR.POCI_FLAG = 1 THEN (COALESCE(CURR.OUTSTANDING,0) * COALESCE(CURR.EXCHANGE_RATE,1)) - (COALESCE(PREV.OUTSTANDING,0) * COALESCE(PREV.EXCHANGE_RATE,1)) ELSE 0 END) OS_POCI 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN COALESCE(PREV.ECL_AMOUNT,0) ELSE 0 END) AS ECL_PREV 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN COALESCE(CURR.OUTSTANDING,0) ELSE 0 END) AS OS_CURR 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN COALESCE(PREV.OUTSTANDING,0) ELSE 0 END) AS OS_PREV 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN COALESCE(CURR.GROSS_CARRYING_AMOUNT,0) ELSE 0 END) AS GCA_CURR 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN COALESCE(PREV.GROSS_CARRYING_AMOUNT,0) ELSE 0 END) AS GCA_PREV 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) RATE_PREV 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''C'' THEN COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) RATE_CURR 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN COALESCE(PREV.ECL_AMOUNT,0) ELSE 0 END) AS ECL_PREV_I 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN COALESCE(CURR.OUTSTANDING,0) ELSE 0 END) AS OS_CURR_I 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN COALESCE(PREV.OUTSTANDING,0) ELSE 0 END) AS OS_PREV_I 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN COALESCE(CURR.GROSS_CARRYING_AMOUNT,0) ELSE 0 END) AS GCA_CURR_I 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN COALESCE(PREV.GROSS_CARRYING_AMOUNT,0) ELSE 0 END) AS GCA_PREV_I 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN COALESCE(PREV.EXCHANGE_RATE, 1) ELSE 0 END) RATE_PREV_I 
                ,(CASE WHEN CURR.IMPAIRED_FLAG = ''I'' THEN COALESCE(CURR.EXCHANGE_RATE, 1) ELSE 0 END) RATE_CURR_I 
            FROM ' || V_TMPTABLE2 || ' AS PREV 
            JOIN ' || V_TMPTABLE1 || ' AS CURR 
            ON CURR.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ECL_UNIQUE_ID = CURR.ECL_UNIQUE_ID 
            AND PREV.DOWNLOAD_DATE = ''' || CAST(V_PREVMONTH AS VARCHAR(10)) || '''::DATE 
            AND PREV.ACCOUNT_STATUS = ''A'' 
            WHERE PREV.EXCHANGE_RATE <> CURR.EXCHANGE_RATE 
            AND CURR.ACCOUNT_STATUS = ''A'' 
            AND PREV.RESTRUCTURE_FLAG = 0 
            AND CURR.RESTRUCTURE_FLAG = 0 
        ) FX_IMPACT 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ), ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_FX_IMPACT' END;

    V_STR_QUERY := V_STR_QUERY || 'CTE_FIN AS ( 
        SELECT 
            URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,SUM(POCI) AS POCI 
            ,SUM(OS_POCI) AS OS_POCI 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.ECL_AMOUNT ELSE 0 END) AS STAGE1 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.ECL_AMOUNT ELSE 0 END) AS STAGE2 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.ECL_AMOUNT ELSE 0 END) AS STAGE3 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.OS_AMOUNT ELSE 0 END) AS OS_STAGE1 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.OS_AMOUNT ELSE 0 END) AS OS_STAGE2 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.OS_AMOUNT ELSE 0 END) AS OS_STAGE3 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.GCA_AMOUNT ELSE 0 END) AS GCA_STAGE1 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.GCA_AMOUNT ELSE 0 END) AS GCA_STAGE2 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.GCA_AMOUNT ELSE 0 END) AS GCA_STAGE3 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.UNUSED_AMOUNT ELSE 0 END) AS UNUSED_STAGE1 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.UNUSED_AMOUNT ELSE 0 END) AS UNUSED_STAGE2 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.UNUSED_AMOUNT ELSE 0 END) AS UNUSED_STAGE3 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.ECL_AMOUNT_I ELSE 0 END) AS STAGE1_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.ECL_AMOUNT_I ELSE 0 END) AS STAGE2_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.ECL_AMOUNT_I ELSE 0 END) AS STAGE3_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.OS_AMOUNT_I ELSE 0 END) AS OS_STAGE1_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.OS_AMOUNT_I ELSE 0 END) AS OS_STAGE2_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.OS_AMOUNT_I ELSE 0 END) AS OS_STAGE3_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.GCA_AMOUNT_I ELSE 0 END) AS GCA_STAGE1_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.GCA_AMOUNT_I ELSE 0 END) AS GCA_STAGE2_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.GCA_AMOUNT_I ELSE 0 END) AS GCA_STAGE3_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''1'' THEN FINBAL.UNUSED_AMOUNT_I ELSE 0 END) AS UNUSED_STAGE1_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''2'' THEN FINBAL.UNUSED_AMOUNT_I ELSE 0 END) AS UNUSED_STAGE2_I 
            ,SUM(CASE WHEN FINBAL.STAGE = ''3'' THEN FINBAL.UNUSED_AMOUNT_I ELSE 0 END) AS UNUSED_STAGE3_I 
        FROM (SELECT 21 AS URUT) A 
        LEFT JOIN ( 
            SELECT 
                STAGE 
                ,DATA_SOURCE 
                ,GROUP_SEGMENT 
                ,IFRS9_CLASS 
                ,SUM(CASE WHEN I.POCI_FLAG = 1 THEN (COALESCE(ECL_AMOUNT,0) * COALESCE(I.EXCHANGE_RATE,1)) ELSE 0 END) AS POCI 
                ,SUM(CASE WHEN I.POCI_FLAG = 1 THEN (COALESCE(OUTSTANDING,0) * COALESCE(I.EXCHANGE_RATE,1)) ELSE 0 END) AS OS_POCI 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' AND I.POCI_FLAG = 0 THEN COALESCE(ECL_AMOUNT,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS ECL_AMOUNT 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' AND I.POCI_FLAG = 0 THEN COALESCE(OUTSTANDING,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS OS_AMOUNT 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' AND I.POCI_FLAG = 0 THEN COALESCE(GROSS_CARRYING_AMOUNT,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS GCA_AMOUNT 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''C'' AND I.POCI_FLAG = 0 THEN COALESCE(UNUSED_AMOUNT,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS UNUSED_AMOUNT 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' AND I.POCI_FLAG = 0 THEN COALESCE(ECL_AMOUNT,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS ECL_AMOUNT_I 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' AND I.POCI_FLAG = 0 THEN COALESCE(OUTSTANDING,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS OS_AMOUNT_I 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' AND I.POCI_FLAG = 0 THEN COALESCE(GROSS_CARRYING_AMOUNT,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS GCA_AMOUNT_I 
                ,SUM(CASE WHEN IMPAIRED_FLAG = ''I'' AND I.POCI_FLAG = 0 THEN COALESCE(UNUSED_AMOUNT,0) * COALESCE(I.EXCHANGE_RATE,1) ELSE 0 END) AS UNUSED_AMOUNT_I 
            FROM ' || V_TMPTABLE1 || ' I 
            WHERE I.DOWNLOAD_DATE = ''' || CAST(V_CURRMONTH AS VARCHAR(10)) || '''::DATE 
            AND I.ACCOUNT_STATUS = ''A'' 
            GROUP BY STAGE, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS, IMPAIRED_FLAG 
        ) FINBAL 
        ON 1 = 1 
        GROUP BY URUT, DATA_SOURCE, GROUP_SEGMENT, IFRS9_CLASS 
    ) ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_FIN' END;

    V_STR_QUERY := V_STR_QUERY || 'INSERT INTO ' || V_TABLEINSERT || ' 
        (
            DOWNLOAD_DATE 
            ,URUT 
            ,DATA_SOURCE 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,POCI 
            ,OS_POCI 
            ,STAGE1 
            ,STAGE2 
            ,STAGE3 
            ,OS_STAGE1 
            ,OS_STAGE2 
            ,OS_STAGE3 
            ,GCA_STAGE1 
            ,GCA_STAGE2 
            ,GCA_STAGE3 
            ,UNUSED_STAGE1 
            ,UNUSED_STAGE2 
            ,UNUSED_STAGE3 
            ,STAGE1_I 
            ,STAGE2_I 
            ,STAGE3_I 
            ,OS_STAGE1_I 
            ,OS_STAGE2_I 
            ,OS_STAGE3_I 
            ,GCA_STAGE1_I 
            ,GCA_STAGE2_I 
            ,GCA_STAGE3_I 
            ,UNUSED_STAGE1_I 
            ,UNUSED_STAGE2_I 
            ,UNUSED_STAGE3_I 
            ,CREATEDBY 
            ,CREATEDDATE 
            ,CREATEDHOST 
        ) SELECT 
            ''' || CAST(V_CURRDATE AS VARCHAR(10)) || '''::DATE 
            ,URUT 
            ,COALESCE(DATA_SOURCE, '''') 
            ,GROUP_SEGMENT 
            ,IFRS9_CLASS 
            ,POCI 
            ,OS_POCI 
            ,COALESCE(STAGE1, 0)  
            ,COALESCE(STAGE2, 0)  
            ,COALESCE(STAGE3, 0) 
            ,COALESCE(OS_STAGE1, 0) 
            ,COALESCE(OS_STAGE2, 0) 
            ,COALESCE(OS_STAGE3, 0) 
            ,COALESCE(GCA_STAGE1, 0) 
            ,COALESCE(GCA_STAGE2, 0) 
            ,COALESCE(GCA_STAGE3, 0) 
            ,COALESCE(UNUSED_STAGE1, 0) 
            ,COALESCE(UNUSED_STAGE2, 0) 
            ,COALESCE(UNUSED_STAGE3, 0) 
            ,COALESCE(STAGE1_I, 0) 
            ,COALESCE(STAGE2_I, 0) 
            ,COALESCE(STAGE3_I, 0) 
            ,COALESCE(OS_STAGE1_I, 0) 
            ,COALESCE(OS_STAGE2_I, 0) 
            ,COALESCE(OS_STAGE3_I, 0) 
            ,COALESCE(GCA_STAGE1_I, 0) 
            ,COALESCE(GCA_STAGE2_I, 0) 
            ,COALESCE(GCA_STAGE3_I, 0) 
            ,COALESCE(UNUSED_STAGE1_I, 0) 
            ,COALESCE(UNUSED_STAGE2_I, 0) 
            ,COALESCE(UNUSED_STAGE3_I, 0) 
            ,''SP_IFRS_ECL_MOVEMENT_DATA'' 
            ,CURRENT_TIMESTAMP 
            ,''LOCALHOST'' 
        FROM ( 
            SELECT * FROM CTE_BEGIN_BAL 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_11 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_12 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_13 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_21 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_22 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_23 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_31 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_32 
            UNION ALL 
            SELECT * FROM CTE_TRANSFER_33 
            UNION ALL 
            SELECT * FROM CTE_NEW1 
            UNION ALL 
            SELECT * FROM CTE_NEW2 
            UNION ALL 
            SELECT * FROM CTE_NEW3 
            UNION ALL 
            SELECT * FROM CTE_INCR 
            UNION ALL 
            SELECT * FROM CTE_CLSE1 
            UNION ALL 
            SELECT * FROM CTE_CLSE2 
            UNION ALL 
            SELECT * FROM CTE_CLSE3 
            UNION ALL 
            SELECT * FROM CTE_CHANGE_PARAM 
            UNION ALL 
            SELECT * FROM CTE_DECR 
            UNION ALL 
            SELECT * FROM CTE_FX_IMPACT 
            UNION ALL 
            SELECT * FROM CTE_FIN 
        ) A 
        ORDER BY A.URUT ';

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | QUERY : %', CASE WHEN COALESCE(V_STR_QUERY, '') = '' THEN 'NULL' ELSE 'CTE_INSERT' END;
    
    EXECUTE(V_STR_QUERY);

    GET DIAGNOSTICS V_RETURNROWS = ROW_COUNT;
    V_RETURNROWS2 := V_RETURNROWS2 + V_RETURNROWS;
    V_RETURNROWS := 0;

    RAISE NOTICE 'SP_IFRS_ECL_MOVEMENT_DATA | AFFECTED RECORD : %', V_RETURNROWS2;
    ---------- ====== BODY ======

    -------- ====== LOG ======
    V_TABLEDEST = V_TABLEINSERT;
    V_COLUMNDEST = '-';
    V_SPNAME = 'SP_IFRS_ECL_MOVEMENT_DATA';
    V_OPERATION = 'INSERT';
    
    CALL SP_IFRS_EXEC_AND_LOG(V_CURRDATE, V_TABLEDEST, V_COLUMNDEST, V_SPNAME, V_OPERATION, V_RETURNROWS2, P_RUNID);
    -------- ====== LOG ======

    -------- ====== RESULT ======
    V_QUERYS = 'SELECT * FROM ' || V_TABLEINSERT || '';
    CALL SP_IFRS_RESULT_PREV(V_CURRDATE, V_QUERYS, V_SPNAME, V_RETURNROWS2, P_RUNID);
    -------- ====== RESULT ======

END;

$$;